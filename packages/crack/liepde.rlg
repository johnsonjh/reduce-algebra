load liepde;



%*******************************************************************%
%                                                                   %
%                      L I E P D E . T S T                          %
%                      -------------------                          %
%  liepde.tst contains test examples for the program liepde.red.    %
%                                                                   %
%  Author of this file: Thomas Wolf                                 %
%  Date:  21. April 1998, 6. May 2003, 14. Feb 2006                 %
%                                                                   %
%  Details about the syntax of liepde.red are given in liepde.tex.  %
%                                                                   %
%  To run this demo you need to load liepde and crack through       %
%     load crack,liepde$                                            %
%  and to read in this file as                                      %
%     in "liepde.tst"$                                              %
%  If you got the source code of a newer version of liepde then     %
%  either read it in through                                        %
%     in "crack.red","liepde.red"$                                  %
%  (with the appropriate directory name in front of liepde.red)     %
%  or, to speed up the calculation, you compile before with         %
%     faslout "crack"$                                              %
%     in "crack.red"$                                               %
%     faslend$                                                      %
%     faslout "liepde"$                                             %
%     in "liepde.red"$                                              %
%     faslend$                                                      %
%  and then load both it with                                       %
%     load crack,liepde$                                            %
%                                                                   %
%*******************************************************************%

lisp(depl!*:=nil)$

     % clearing of all dependences
lisp(print_:=nil)$

       
on dfprint$



COMMENT
-------------------------------------------------------
The following runs demonstrate the program LIEPDE for 
the computation of infinitesimal symmetries. Times given
below refer to a 8 MB session under LINUX on a 133 MHz
Pentium PC with the CRACK version of April 1998 running
PSL Reduce.
-------------------------------------------------------$


lisp(prelim_:=nil)$

      % not necessary as this is the default value
lisp(individual_:=nil)$

  % not necessary as this is the default value

COMMENT
-------------------------------------------------------
The first example is a single ODE with a parametric
function f=f(x) for which point symmetries are to be
determined.
(Time ~ 6 sec.)$

write"-------------------------------------------------------"$


-------------------------------------------------------


lisp(freeint_:=nil)$

 % This enables the solution of differential equ.s in
                     % which unevaluated integrals remain. This becomes
                     % necessary in this example through the parametric
                     % function f=f(x)
depend y,x$


depend f,x$


liepde({df(y,x,2)=-(y+3*f)*df(y,x)+y**3-f*y**2-(2*f**2+df(f,x))*y, 
        {y}, {x}},
       {"point"},{},{})$


--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single differential equations or systems of de's

The ODE under investigation is :

                                 2        2    3
y  = - f *y - 3*y *f - y *y - 2*f *y - f*y  + y
 2x     x        x      x

for the function(s) : 

y(x)


Start of splitting equations
4 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

new function: c_1(x)
new function: c_2(x)
Integration of e_1

Substitution of xi_x(x,y) by an expression in 
c_2(x), c_1(x) found in e_1 : 
xi_x= - (c_1 + c_2*y)


new function: c_3(x)
new function: c_4(x)
Integration of e_2

Substitution of eta_y(x,y) by an expression in 
c_2(x), c_4(x), c_3(x) found in e_2 : 13 factors in 6 terms

Separation of e_3 yields (e_5 e_7 e_6)

Separation of e_4 yields (e_8 e_12 e_9 e_11 e_10)

e_6 is a consequence of e_9.
Substitution of c_2(x) found in e_5 : 
c_2=0


Substitution of c_4(x) by an expression in 
c_1(x) found in e_9 : 
c_4= - c_1
          x


Substitution of c_3(x) by an expression in 
c_1(x) found in e_10 : 
      - c_1   + c_1 *f + f *c_1
           2x      x      x
c_3=----------------------------
                 3


new constant: c_5
Not enough integrations to solve for a function.
new constant: c_6
Integration of e_7

c_1
   3x

from e_7 and e_11. e_11: 

                                            2
0=2*c_1   + 5*c_1  *f - 4*c_1 *f  - 7*c_1 *f  - 2*f  *c_1 - 7*f *c_1*f
       3x        2x          x  x        x         2x          x

is replaced by e_13: 

0=c_1   - c_1 *f - f *c_1
     2x      x      x


new constant: c_7
Not enough integrations to solve for a function.
new constant: c_8
Integration of e_13

c_1
   x

from e_13 and e_7. e_7: 

0=c_1  - c_1*f + c_6
     x

is replaced by e_14: 

0=c_6 - c_8


c_1
   4x

from e_13 and e_12. e_12: 
 11 terms, with derivatives of functions of all 1 variables: x

 (c_1  ,c_1  ,c_1  ,c_1 ,c_1)
     4x    3x    2x    x

is replaced by e_15: 
 8 terms, with derivatives of functions of all 1 variables: x

 (c_1  ,c_1  ,c_1 ,c_1)
     3x    2x    x


c_1
   3x

from e_13 and e_15. e_15: 
 8 terms, with derivatives of functions of all 1 variables: x

 (c_1  ,c_1  ,c_1 ,c_1)
     3x    2x    x

is replaced by e_16: 

0=c_1   - c_1 *f - f *c_1
     2x      x      x


new constant: c_9
Not enough integrations to solve for a function.
new constant: c_10
Integration of e_16

c_1
   x

from e_16 and e_13. e_13: 

0=c_1  - c_1*f + c_8
     x

is replaced by e_17: 

0=c_10 - c_8



>>>>>>>>> Solution : 
equations : 

e_16 : 
0=c_1  - c_1*f + c_10
     x



Functions : 
       c_1   - c_1 *f + 3*c_1 *y - f *c_1
          2x      x          x      x
eta_y=------------------------------------
                       3


xi_x= - c_1

c_1(x), c_10
with 8 terms

Variables : x, y
number of equations : 1
total no of terms   : 3
1 equation in 1 variable: e_16(3)
1 function with 1 argument  : c_1(1)
1 constant : c_10(1)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------- Symmetries:

xi_x=3*c_1

eta_y= - c_1   + c_1 *f - 3*c_1 *y + f *c_1
            2x      x          x      x

with c_10, c_1(x)
which still have to satisfy: 

                     1
0=3*(c_1  - c_1*f - ---*c_10)
        x            3


-------- 

nodepnd {y,f}$


lisp(freeint_:=t)$

   % Because the simplification of differential
                     % expressions which involve unevaluated integrals
                     % may provide difficulties such solutions involving
                     % unevaluated integrals are disabled.

COMMENT
-------------------------------------------------------
The following example demonstrates a number of things.
The Burgers equation is investigated concerning third
order symmetries. The equation is used to substitute
df(u,t) and all derivatives of df(u,t). This computation
also shows that any equations that remain unsolved are
returned, like in this case the heat quation.
(Time ~ 15 sec.)$

write"-------------------------------------------------------"$


-------------------------------------------------------


nodepnd {u}$


depend u,t,x$


liepde({df(u,t)=df(u,x,2)+df(u,x)**2,{u},{t,x}},{"general",3},{},{})$


--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single differential equations or systems of de's

The PDE under investigation is :

           2
u =u   + u
 t  2x    x

for the function(s) : 

u(t,x)


Start of splitting equations
3 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

new function: c_11(t,x,u,u!`2,u!`2!`2)
new function: c_12(t,x,u,u!`2,u!`2!`2)
Integration of e_1

Substitution of eta_u(t,x,u,u!`2,u!`2!`2,u!`2!`2!`2) by an expression in 
c_12(t,x,u,u!`2,u!`2!`2), c_11(t,x,u,u!`2,u!`2!`2) found in e_1 : 
eta_u= - (c_11 + c_12*u`2`2`2)


Separation of e_2 yields (e_4 e_5)

Separation of e_3 yields (e_6 e_7 e_9 e_8)

new function: c_13(t,x,u,u!`2)
Integration of e_4

Substitution of c_12(t,x,u,u!`2,u!`2!`2) by an expression in 
c_13(t,x,u,u!`2) found in e_4 : 
c_12= - c_13


Separation of e_5 yields (e_10 e_11)

new function: c_14(t,x,u,u!`2)
new function: c_15(t,x,u,u!`2)
Integration of e_7

Substitution of c_11(t,x,u,u!`2,u!`2!`2) by an expression in 
c_15(t,x,u,u!`2), c_14(t,x,u,u!`2) found in e_7 : 
c_11= - (c_14 + c_15*u`2`2)


Separation of e_8 yields (e_12 e_13 e_14)

Separation of e_9 yields (e_15 e_16 e_18 e_17)

new function: c_16(t,x,u)
Integration of e_10

Substitution of c_13(t,x,u,u!`2) by an expression in 
c_16(t,x,u) found in e_10 : 
c_13= - c_16


Separation of e_11 yields (e_20 e_19)

new function: c_17(t,x,u)
new function: c_18(t,x,u)
Integration of e_15

Substitution of c_15(t,x,u,u!`2) by an expression in 
c_18(t,x,u), c_17(t,x,u) found in e_15 : 
c_15= - (c_17 + c_18*u`2)


Separation of e_14 yields (e_23 e_21 e_22)

Substitution of c_18(t,x,u) by an expression in 
c_16(t,x,u) found in e_13 : 
c_18=3*c_16


new function: c_19(t,u)
Integration of e_20

Substitution of c_16(t,x,u) by an expression in 
c_19(t,u) found in e_20 : 
c_16= - c_19


new function: c_20(t,x)
Integration of e_22

Substitution of c_17(t,x,u) by an expression in 
c_20(t,x) found in e_22 : 
c_17= - c_20


new function: c_21(t)
Integration of e_19

Substitution of c_19(t,u) by an expression in 
c_21(t) found in e_19 : 
c_19= - c_21


new function: c_22(t)
Integration of e_23

Substitution of c_20(t,x) by an expression in 
c_21(t), c_22(t) found in e_23 : 
       - (c_21 *x + c_22)
              t
c_20=---------------------
               2


new function: c_23(t,x,u)
new function: c_24(t,x,u)
Integration of e_16

Substitution of c_14(t,x,u,u!`2) by an expression in 
c_24(t,x,u), c_23(t,x,u), c_21(t), c_22(t) found in e_16 : 14 factors in 6 terms

Separation of e_17 yields (e_24 e_25)

Separation of e_18 yields (e_29 e_26 e_28 e_27)

new function: c_25(t,x)
Integration of e_24

Substitution of c_24(t,x,u) by an expression in 
c_25(t,x) found in e_24 : 
c_24= - c_25


new function: c_26(t)
Integration of e_25

Substitution of c_25(t,x) by an expression in 
c_21(t), c_22(t), c_26(t) found in e_25 : 
                 2
       - c_21  *x  - 2*c_22 *x - 2*c_26
             2t            t
c_25=-----------------------------------
                      8


new function: c_27(t,x)
new function: c_28(t,x)
Integration of e_27

Substitution of c_23(t,x,u) by an expression in 
c_28(t,x), c_27(t,x) found in e_27 : 
           u
       - (e *c_28 + c_27)
c_23=---------------------
               u
              e


Separation of e_29 yields (e_31 e_30)

new function: c_29(t)
Integration of e_28

Substitution of c_28(t,x) by an expression in 
c_21(t), c_22(t), c_26(t), c_29(t) found in e_28 : 
                 3                          2
       - c_21  *x  + 6*c_21  *x - 3*c_22  *x  - 6*c_26 *x - 3*c_29
             3t            2t           2t            t
c_28=--------------------------------------------------------------
                                   48


Separation of e_30 yields (e_33 e_32 e_35 e_34)

new constant: c_30
new constant: c_31
new constant: c_32
Integration of e_33

Substitution of c_22(t) by an expression in 
c_32, c_31, c_30 found in e_33 : 
                        2
       - 2*c_30 - c_31*t  - 2*c_32*t
c_22=--------------------------------
                    2


new constant: c_33
new constant: c_34
new constant: c_35
new constant: c_36
Integration of e_32

Substitution of c_21(t) by an expression in 
c_36, c_35, c_34, c_33 found in e_32 : 
                          2         3
       - 6*c_33 - 3*c_34*t  - c_35*t  - 6*c_36*t
c_21=--------------------------------------------
                          6


new constant: c_37
new constant: c_38
Integration of e_34

Substitution of c_26(t) by an expression in 
c_35, c_38, c_37 found in e_34 : 
               2
c_26= - (c_35*t  + c_37 + c_38*t)


new constant: c_39
Integration of e_35

Substitution of c_29(t) by an expression in 
c_31, c_39 found in e_35 : 
c_29= - 2*c_31*t - c_39



>>>>>>>>> Solution : 
equations : 

e_31 : 
0=c_27  - c_27
      t       2x



Functions : 
eta_u= expr. with 40 terms in c_39, c_37, c_38, c_33, c_34, c_35, c_36, c_30, 
c_31, c_32, c_27
c_27(t,x), c_32, c_31, c_30, c_36, c_35, c_34, c_33, c_38, 
c_37, c_39
with 51 terms

Variables : t, x, u, u`2, u`2`2, u`2`2`2
number of equations : 1
total no of terms   : 2
1 equation in 2 variables: e_31(2)
1 function with 2 arguments : c_27(1)
10 constants : c_32(0),c_31(0),c_30(0),
  c_36(0),c_35(0),c_34(0),c_33(0),c_38(0),c_37(0),c_39(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------- 1. Symmetry:

xi_t=0

xi_x=0

eta_u=1

-------- 2. Symmetry:

xi_t=0

xi_x=0

eta_u=u
       x

-------- 3. Symmetry:

xi_t=0

xi_x=0

eta_u=2*u *t + x
         x

-------- 4. Symmetry:

xi_t=0

xi_x=0

                         3
eta_u=u   + 3*u  *u  + u
       3x      2x  x    x

-------- 5. Symmetry:

xi_t=0

xi_x=0

             2              2                   3  2       2           2
eta_u=4*u  *t  + 12*u  *u *t  + 4*u  *t*x + 4*u  *t  + 4*u  *t*x + u *x  - x
         3x          2x  x         2x          x          x         x

-------- 6. Symmetry:

xi_t=0

xi_x=0

             3              3           2         3  3        2  2            2
eta_u=8*u  *t  + 24*u  *u *t  + 12*u  *t *x + 8*u  *t  + 12*u  *t *x + 12*u *t
         3x          2x  x          2x           x           x             x

           2            3
 + 6*u *t*x  + 6*t*x + x
      x

-------- 7. Symmetry:

xi_t=0

xi_x=0

                                         3       2
eta_u=2*u  *t + 6*u  *u *t + u  *x + 2*u  *t + u  *x
         3x        2x  x      2x        x       x

-------- 8. Symmetry:

xi_t=0

xi_x=0

              2
eta_u=u   + u
       2x    x

-------- 9. Symmetry:

xi_t=0

xi_x=0

             2       2  2                     2
eta_u=4*u  *t  + 4*u  *t  + 4*u *t*x + 2*t + x
         2x         x          x

-------- 10. Symmetry:

xi_t=0

xi_x=0

                    2
eta_u=2*u  *t + 2*u  *t + u *x
         2x        x       x

-------- Further symmetry:

xi_t=0

xi_x=0

       c_27
eta_u=------
         u
        e

with c_27(t,x)
which still has to satisfy: 

0=c_27  - c_27
      t       2x


-------- 


COMMENT
-------------------------------------------------------
Now the same equation is investigated, this time only
df(u,x,2) and its derivatives are substituted. As a
consequence fewer jet-variables (u-derivatives of lower
order) are generated in the process of formulating the
symmetry conditions. Fewer jet-variables in which the
conditions have to be fulfilled identically mean less
overdetermined conditions and more solutions which to
compute takes longer than before.
(Time ~ 85 sec.)$

write"-------------------------------------------------------"$


-------------------------------------------------------


liepde({df(u,x,2)=df(u,t)-df(u,x)**2,{u},{t,x}},{"general",3},{},{})$


--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single differential equations or systems of de's

The PDE under investigation is :

           2
u  =u  - u
 2x  t    x

for the function(s) : 

u(t,x)

##### The function eta_u that is to be computed depends on (u`2`2)
 which is a left hand side of the input system or a 
derivative of a left hand side of the input system
Start of splitting equations
3 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

new function: c_40(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2)
new function: c_41(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2)
Integration of e_1

Substitution of eta_u(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2,u!`1!`1!`1)
 by an expression in 
c_41(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2), 
c_40(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2) found in e_1 : 
eta_u= - (c_40 + c_41*u`1`1`1)


Separation of e_2 yields (e_4 e_5)

Separation of e_3 yields (e_6 e_7 e_9 e_8)

new function: c_42(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2)
Integration of e_4

Substitution of c_41(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2) by an 
expression in 
c_42(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2) found in e_4 : 
c_41= - c_42


Separation of e_5 yields (e_10 e_11)

new function: c_43(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2)
new function: c_44(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2)
Integration of e_7

Substitution of c_40(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2,u!`1!`1!`2) by an 
expression in 
c_44(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2), 
c_43(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2) found in e_7 : 
c_40= - (c_43 + c_44*u`1`1`2)


Separation of e_8 yields (e_12 e_13 e_14)

Separation of e_9 yields (e_15 e_16 e_17 e_18)

new function: c_45(t,x,u,u!`2,u!`1,u!`1!`2)
Integration of e_10

Substitution of c_42(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2) by an expression in 
c_45(t,x,u,u!`2,u!`1,u!`1!`2) found in e_10 : 
c_42= - c_45


Separation of e_11 yields (e_19 e_20)

new function: c_46(t,x,u,u!`2,u!`1,u!`1!`2)
Integration of e_13

Substitution of c_44(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2) by an expression in 
c_46(t,x,u,u!`2,u!`1,u!`1!`2) found in e_13 : 
c_44= - c_46


Separation of e_14 yields (e_21 e_22 e_23)

new function: c_47(t,x,u,u!`2,u!`1)
Integration of e_19

Substitution of c_45(t,x,u,u!`2,u!`1,u!`1!`2) by an expression in 
c_47(t,x,u,u!`2,u!`1) found in e_19 : 
c_45= - c_47


Separation of e_20 yields (e_24 e_25)

new function: c_48(t,x,u,u!`2,u!`1,u!`1!`2)
new function: c_49(t,x,u,u!`2,u!`1,u!`1!`2)
Integration of e_16

Substitution of c_43(t,x,u,u!`2,u!`1,u!`1!`1,u!`1!`2) by an expression in 
c_49(t,x,u,u!`2,u!`1,u!`1!`2), c_48(t,x,u,u!`2,u!`1,u!`1!`2) found in e_16 : 
c_43= - (c_48 + c_49*u`1`1)


Separation of e_17 yields (e_26 e_27 e_28)

Separation of e_18 yields (e_29 e_30 e_31 e_32)

new function: c_50(t,x,u,u!`2,u!`1)
Integration of e_22

Substitution of c_46(t,x,u,u!`2,u!`1,u!`1!`2) by an expression in 
c_50(t,x,u,u!`2,u!`1) found in e_22 : 
c_46= - c_50


Separation of e_23 yields (e_33 e_34 e_35)

new function: c_51(t,x,u,u!`2)
Integration of e_24

Substitution of c_47(t,x,u,u!`2,u!`1) by an expression in 
c_51(t,x,u,u!`2) found in e_24 : 
c_47= - c_51


Separation of e_25 yields (e_36 e_37)

new function: c_52(t,x,u,u!`2,u!`1)
Integration of e_27

Substitution of c_49(t,x,u,u!`2,u!`1,u!`1!`2) by an expression in 
c_52(t,x,u,u!`2,u!`1) found in e_27 : 
c_49= - c_52


Separation of e_28 yields (e_38 e_39 e_40)

new function: c_53(t,x,u,u!`2)
Integration of e_34

Substitution of c_50(t,x,u,u!`2,u!`1) by an expression in 
c_53(t,x,u,u!`2) found in e_34 : 
c_50= - c_53


Separation of e_35 yields (e_41 e_42 e_43)

new function: c_54(t,x,u)
Integration of e_36

Substitution of c_51(t,x,u,u!`2) by an expression in 
c_54(t,x,u) found in e_36 : 
c_51= - c_54


Separation of e_37 yields (e_45 e_44)

new function: c_55(t,x,u,u!`2,u!`1)
new function: c_56(t,x,u,u!`2,u!`1)
Integration of e_30

Substitution of c_48(t,x,u,u!`2,u!`1,u!`1!`2) by an expression in 
c_56(t,x,u,u!`2,u!`1), c_55(t,x,u,u!`2,u!`1) found in e_30 : 
c_48= - (c_55 + c_56*u`1`2)


Separation of e_31 yields (e_46 e_47 e_48)

Separation of e_32 yields (e_49 e_50 e_52 e_51)

new function: c_57(t,x,u)
Integration of e_42

Substitution of c_53(t,x,u,u!`2) by an expression in 
c_57(t,x,u) found in e_42 : 
c_53= - c_57


Separation of e_43 yields (e_53 e_55 e_54)

new function: c_58(t,u)
Integration of e_45

Substitution of c_54(t,x,u) by an expression in 
c_58(t,u) found in e_45 : 
c_54= - c_58


new function: c_59(t,x,u,u!`2)
new function: c_60(t,x,u,u!`2)
Integration of e_49

Substitution of c_56(t,x,u,u!`2,u!`1) by an expression in 
c_60(t,x,u,u!`2), c_59(t,x,u,u!`2) found in e_49 : 
c_56= - (c_59 + c_60*u`1)


new function: c_61(t,x,u,u!`2)
new function: c_62(t,x,u,u!`2)
Integration of e_46

Substitution of c_52(t,x,u,u!`2,u!`1) by an expression in 
c_62(t,x,u,u!`2), c_61(t,x,u,u!`2) found in e_46 : 
c_52= - (c_61 + c_62*u`1)


Separation of e_47 yields (e_56 e_57)

Separation of e_40 yields (e_58 e_59 e_60)

e_58 is a consequence of e_56.
Separation of e_48 yields (e_61 e_62 e_64 e_63)

Substitution of c_62(t,x,u,u!`2) by an expression in 
c_58(t,u) found in e_39 : 
c_62=3*c_58


new function: c_63(t,x)
Integration of e_54

Substitution of c_57(t,x,u) by an expression in 
c_63(t,x) found in e_54 : 
c_57= - c_63


new function: c_64(t)
Integration of e_44

Substitution of c_58(t,u) by an expression in 
c_64(t) found in e_44 : 
c_58= - c_64


Substitution of c_60(t,x,u,u!`2) by an expression in 
c_63(t,x) found in e_57 : 
c_60=2*c_63


new function: c_65(t,x,u)
new function: c_66(t,x,u)
Integration of e_62

Substitution of c_61(t,x,u,u!`2) by an expression in 
c_66(t,x,u), c_65(t,x,u) found in e_62 : 
c_61= - (c_65 + c_66*u`2)


Separation of e_60 yields (e_3 e_2 e_1)

Substitution of c_66(t,x,u) by an expression in 
c_63(t,x) found in e_59 : 
c_66= - c_63


new function: c_67(t,x)
Integration of e_2

Substitution of c_65(t,x,u) by an expression in 
c_67(t,x) found in e_2 : 
c_65= - c_67


new function: c_68(t)
Integration of e_55

Substitution of c_63(t,x) by an expression in 
c_64(t), c_68(t) found in e_55 : 
       - (c_64 *x + c_68)
              t
c_63=---------------------
               2


new function: c_69(t,x,u)
Integration of e_63

Substitution of c_59(t,x,u,u!`2) by an expression in 
c_69(t,x,u) found in e_63 : 
c_59= - c_69


Separation of e_64 yields (e_4 e_6)

new function: c_70(t,x)
new function: c_71(t,u)
Partially potential integration of e_4 yields (e_4 e_5)

Substitution of c_67(t,x) by an expression in 
c_70(t,x) found in e_5 : 
c_67=c_70
         x


Substitution of c_69(t,x,u) by an expression in 
c_71(t,u), c_70(t,x) found in e_4 : 
       - c_70  + c_70   - c_71
             t       2x
c_69=--------------------------
                 2


new function: c_72(t)
new function: c_73(t)
Integration of e_3

Substitution of c_70(t,x) by an expression in 
c_64(t), c_68(t), c_73(t), c_72(t) found in e_3 : 
                 3            2
       - c_64  *x  - 3*c_68 *x  - 6*c_72 - 6*c_73*x
             2t            t
c_70=-----------------------------------------------
                           24


new function: c_74(t)
Integration of e_6

Substitution of c_71(t,u) by an expression in 
c_74(t) found in e_6 : 
c_71= - c_74


new function: c_75(t)
replacing df(c_72,t) by c_75(t)

new function: c_76(t,x,u,u!`2)
new function: c_77(t,x,u,u!`2)
Integration of e_50

Substitution of c_55(t,x,u,u!`2,u!`1) by an expression in 
c_77(t,x,u,u!`2), c_76(t,x,u,u!`2), c_64(t), c_68(t), c_73(t) found in e_50 : 28
 factors in 9 terms

Separation of e_51 yields (e_7 e_8)

Separation of e_52 yields (e_9 e_12 e_11 e_10)

new function: c_78(t,x,u)
new function: c_79(t,x,u)
Integration of e_9

Substitution of c_77(t,x,u,u!`2) by an expression in 
c_79(t,x,u), c_78(t,x,u) found in e_9 : 
c_77= - (c_78 + c_79*u`2)


Separation of e_8 yields (e_13 e_14 e_15)

Substitution of c_79(t,x,u) by an expression in 
c_64(t), c_68(t), c_73(t), c_74(t), c_75(t) found in e_7 : 14 factors in 8 terms

new function: c_80(t,x)
Integration of e_13

Substitution of c_78(t,x,u) by an expression in 
c_80(t,x) found in e_13 : 
c_78= - c_80


new function: c_81(t,x,u)
new function: c_82(t,x,u)
Integration of e_12

Substitution of c_76(t,x,u,u!`2) by an expression in 
c_82(t,x,u), c_81(t,x,u) found in e_12 : 
c_76= - (c_81 + c_82*u`2)


Separation of e_11 yields (e_16 e_21 e_19 e_20)

Separation of e_10 yields (e_18 e_17)

new function: c_83(t,x)
new function: c_84(t,x)
Integration of e_21

Substitution of c_82(t,x,u) by an expression in 
c_84(t,x), c_83(t,x) found in e_21 : 
      u
c_82=e *c_83 - c_84


Separation of e_18 yields (e_26 e_22)

Separation of e_17 yields (e_23 e_33)

e_33 is a consequence of e_14.
Substitution of c_83(t,x) found in e_23 : 
c_83=0


new function: c_85(t,x)
new function: c_86(t,x)
Integration of e_19

Substitution of c_81(t,x,u) by an expression in 
c_86(t,x), c_85(t,x) found in e_19 : 
           u
       - (e *c_86 + c_85)
c_81=---------------------
               u
              e


Separation of e_16 yields (e_25 e_24)

new function: c_87(t,x)
Potential integration of e_20 yields (e_20 e_29)

Substitution of c_84(t,x) by an expression in 
c_87(t,x) found in e_29 : 
c_84=c_87
         x


Substitution of c_86(t,x) by an expression in 
c_87(t,x) found in e_20 : 
      c_87  - c_87
          t       2x
c_86=----------------
            2


new function: c_88(t)
Integration of e_14

Substitution of c_80(t,x) by an expression in 
c_64(t), c_68(t), c_73(t), c_74(t), c_75(t), c_88(t) found in e_14 : 22
 factors in 9 terms

new function: c_89(t)
new function: c_90(t)
Integration of e_22

Substitution of c_87(t,x) by an expression in 
c_64(t), c_68(t), c_73(t), c_74(t), c_75(t), c_88(t), c_90(t), 
c_89(t) found in e_22 : 47 factors in 13 terms

Separation of e_24 yields (e_28 e_27 e_38 e_35 e_34 e_36 e_41)

new constant: c_91
new constant: c_92
new constant: c_93
new constant: c_94
new constant: c_95
new constant: c_96
Integration of e_28

Substitution of c_68(t) by an expression in 
c_96, c_95, c_94, c_93, c_92, c_91 found in e_28 : 21 factors in 7 terms

new constant: c_97
new constant: c_98
new constant: c_99
new constant: c_100
new constant: c_101
new constant: c_102
new constant: c_103
Integration of e_27

Substitution of c_64(t) by an expression in 
c_103, c_102, c_101, c_100, c_99, c_98, c_97 found in e_27 : 28 factors in 8
 terms

new function: c_104(t)
replacing df(c_89,t) by c_104(t)

new constant: c_105
new constant: c_106
new constant: c_107
new constant: c_108
new constant: c_109
Integration of e_38

Substitution of c_73(t) by an expression in 
c_100, c_109, c_108, c_107, c_106, c_105 found in e_38 : 21 factors in 7 terms

new constant: c_110
new constant: c_111
new constant: c_112
new constant: c_113
Integration of e_34

Substitution of c_75(t) by an expression in 
c_74(t), c_94, c_113, c_112, c_111, c_110 found in e_34 : 16 factors in 7 terms

new constant: c_114
new constant: c_115
Integration of e_41

Substitution of c_90(t) by an expression in 
c_94, c_93, c_112, c_115, c_114 found in e_41 : 13 factors in 5 terms

new constant: c_116
new constant: c_117
new constant: c_118
Integration of e_35

Substitution of c_88(t) by an expression in 
c_101, c_100, c_107, c_118, c_117, c_116 found in e_35 : 19 factors in 7 terms

new constant: c_119
Integration of e_36

Substitution of c_104(t) by an expression in 
c_101, c_100, c_99, c_108, c_107, c_117, c_119 found in e_36 : 17 factors in 7
 terms


>>>>>>>>> Solution : 
equations : 

e_25 : 
0=c_85  - c_85
      t       2x



Functions : 
eta_u= expr. with 239 terms in c_119, c_116, c_117, c_118, c_114, c_115, c_110, 
c_111, c_112, c_113, c_105, c_106, c_107, c_108, c_109, c_97, c_98, c_99, c_100
, c_101, c_102, c_103, c_91, c_92, c_93, c_94, c_95, c_96, c_85
c_85(t,x), c_96, c_95, c_94, c_93, c_92, c_91, c_103, c_102, 
c_101, c_100, c_99, c_98, c_97, c_109, c_108, c_107, c_106, 
c_105, c_113, c_112, c_111, c_110, c_115, c_114, c_118, 
c_117, c_116, c_119
with 268 terms

Variables : t, x, u, u`2, u`1, u`1`1, u`1`2, u`1`1`2, 
u`1`1`1
number of equations : 1
total no of terms   : 2
1 equation in 2 variables: e_25(2)
1 function with 2 arguments : c_85(1)
28 constants : c_96(0),c_95(0),c_94(0),
  c_93(0),c_92(0),c_91(0),c_103(0),c_102(0),c_101(0),c_100(0),c_99(0),c_98(0),
  c_97(0),c_109(0),c_108(0),c_107(0),c_106(0),c_105(0),c_113(0),c_112(0),c_111(0
),
  c_110(0),c_115(0),c_114(0),c_118(0),c_117(0),c_116(0),c_119(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------- 1. Symmetry:

xi_t=0

xi_x=0

eta_u=1

-------- 2. Symmetry:

xi_t=0

xi_x=0

eta_u=u
       t

-------- 3. Symmetry:

xi_t=0

xi_x=0

            2                     2
eta_u=4*u *t  + 4*u *t*x + 2*t + x
         t         x

-------- 4. Symmetry:

xi_t=0

xi_x=0

eta_u=4*u *t + 2*u *x - 1
         t        x

-------- 5. Symmetry:

xi_t=0

xi_x=0

eta_u=u
       x

-------- 6. Symmetry:

xi_t=0

xi_x=0

eta_u=2*u *t + x
         x

-------- 7. Symmetry:

xi_t=0

xi_x=0

eta_u=u    + u *u
       t,x    t  x

-------- 8. Symmetry:

xi_t=0

xi_x=0

              2            2                  2
eta_u=4*u   *t  + 4*u *u *t  + 4*u *t*x + u *x  - x
         t,x         t  x         t        x

-------- 9. Symmetry:

xi_t=0

xi_x=0

              3            3          2            2           2            3
eta_u=8*u   *t  + 8*u *u *t  + 12*u *t *x + 12*u *t  + 6*u *t*x  + 6*t*x + x
         t,x         t  x          t            x         x

-------- 10. Symmetry:

xi_t=0

xi_x=0

eta_u=2*u   *t + 2*u *u *t + u *x
         t,x        t  x      t

-------- 11. Symmetry:

xi_t=0

xi_x=0

              2
eta_u=u   + u
       2t    t

-------- 12. Symmetry:

xi_t=0

xi_x=0

                          2       2  2                       2
eta_u=8*u   *t*x + 8*u  *t  + 8*u  *t  + 8*u *u *t*x + 2*u *x  - 2*u *x + 1
         t,x          2t         t          t  x          t         x

-------- 13. Symmetry:

xi_t=0

xi_x=0

               3             4        2  4             3            3
eta_u=32*u   *t *x + 16*u  *t  + 16*u  *t  + 32*u *u *t *x + 48*u *t
          t,x            2t          t           t  x            t

          2  2          2             3       2         2    4
 + 24*u *t *x  + 48*u *t *x + 8*u *t*x  + 12*t  + 12*t*x  + x
       t             x           x

-------- 14. Symmetry:

xi_t=0

xi_x=0

               2            3       2  3             2             2
eta_u=12*u   *t *x + 8*u  *t  + 8*u  *t  + 12*u *u *t *x + 6*u *t*x  - 6*u *t*x
          t,x           2t         t           t  x           t           x

       3            2
 + u *x  - 6*t - 3*x
    x

-------- 15. Symmetry:

xi_t=0

xi_x=0

                             2
eta_u=u   *x + 2*u  *t + 2*u  *t + u *u *x
       t,x        2t        t       t  x

-------- 16. Symmetry:

xi_t=0

xi_x=0

                         3
eta_u=u   + 3*u  *u  + u
       3t      2t  t    t

-------- 17. Symmetry:

xi_t=0

xi_x=0

                                      2                            2
eta_u=8*u   *u *t*x - u   *x + 4*u  *t  + 4*u    *t*x + 12*u  *u *t
         t,x  t        t,x        3t         2t,x           2t  t

                       2       3  2       2            2  2
 + 4*u  *u *t*x + u  *x  + 4*u  *t  + 4*u  *u *t*x + u  *x  - u *u *x
      2t  x        2t         t          t   x        t        t  x

-------- 18. Symmetry:

xi_t=0

xi_x=0

                  3              2               3           4             3
eta_u=64*u   *u *t *x - 24*u   *t *x + 8*u   *t*x  + 16*u  *t  + 32*u    *t *x
          t,x  t            t,x           t,x            3t          2t,x

              4              3             2  2        3  4        2     3
 + 48*u  *u *t  + 32*u  *u *t *x + 24*u  *t *x  + 16*u  *t  + 32*u  *u *t *x
       2t  t          2t  x            2t             t           t   x

        2  2  2             2                3            2       4
 + 24*u  *t *x  - 24*u *u *t *x + 8*u *u *t*x  - 24*u *t*x  + u *x  + 24*u *t*x
       t              t  x           t  x            t         t          x

         3              2
 - 6*u *x  + 30*t + 15*x
      x

-------- 19. Symmetry:

xi_t=0

xi_x=0

                   5               4               3  3           6
eta_u=384*u   *u *t *x + 960*u   *t *x + 160*u   *t *x  + 64*u  *t
           t,x  t             t,x             t,x             3t

              5                 6               5              5            4  2
 + 192*u    *t *x + 192*u  *u *t  + 192*u  *u *t *x + 480*u  *t  + 240*u  *t *x
        2t,x             2t  t           2t  x             2t           2t

        3  6         2     5           2  5         2  4  2              4
 + 64*u  *t  + 192*u  *u *t *x + 480*u  *t  + 240*u  *t *x  + 960*u *u *t *x
       t            t   x             t            t               t  x

              3  3           4           3  2          2  4           3
 + 160*u *u *t *x  + 720*u *t  + 720*u *t *x  + 60*u *t *x  + 720*u *t *x
        t  x              t           t             t              x

           2  3            5        3        2  2         4    6
 + 240*u *t *x  + 12*u *t*x  + 120*t  + 180*t *x  + 30*t*x  + x
        x             x

-------- 20. Symmetry:

xi_t=0

xi_x=0

                   4              3              2  3           5
eta_u=160*u   *u *t *x - 80*u   *t *x + 40*u   *t *x  + 32*u  *t
           t,x  t            t,x            t,x             3t

             4                5              4             3  2        3  5
 + 80*u    *t *x + 96*u  *u *t  + 80*u  *u *t *x + 80*u  *t *x  + 32*u  *t
       2t,x            2t  t          2t  x            2t             t

        2     4          2  3  2             3               2  3           3
 + 80*u  *u *t *x + 80*u  *t *x  - 80*u *u *t *x + 40*u *u *t *x  - 360*u *t
       t   x            t              t  x            t  x              t

           2  2            4           2              3       5        2
 - 120*u *t *x  + 10*u *t*x  - 420*u *t *x - 60*u *t*x  + u *x  - 120*t
        t             t             x            x         x

          2       4
 - 120*t*x  - 10*x

-------- 21. Symmetry:

xi_t=0

xi_x=0

                  2                           3           3             2
eta_u=48*u   *u *t *x - 12*u   *t*x + 2*u   *x  + 16*u  *t  + 24*u    *t *x
          t,x  t            t,x          t,x          3t          2t,x

              3              2               2        3  3        2     2
 + 48*u  *u *t  + 24*u  *u *t *x + 12*u  *t*x  + 16*u  *t  + 24*u  *u *t *x
       2t  t          2t  x            2t            t           t   x

        2    2                           3         2
 + 12*u  *t*x  - 12*u *u *t*x + 2*u *u *x  - 6*u *x  + 6*u *x - 3
       t             t  x          t  x         t         x

-------- 22. Symmetry:

xi_t=0

xi_x=0

eta_u

                                                               3       2
=2*u   *u *x + 2*u  *t + u    *x + 6*u  *u *t + u  *u *x + 2*u  *t + u  *u *x
    t,x  t        3t      2t,x        2t  t      2t  x        t       t   x

-------- 23. Symmetry:

xi_t=0

xi_x=0

                                     2
eta_u=2*u   *u  + u     + u  *u  + u  *u
         t,x  t    2t,x    2t  x    t   x

-------- 24. Symmetry:

xi_t=0

xi_x=0

                 2                    2            2             2
eta_u=8*u   *u *t  - 2*u   *t + u   *x  + 4*u    *t  + 4*u  *u *t  + 4*u  *t*x
         t,x  t         t,x      t,x         2t,x         2t  x         2t

       2     2       2                          2
 + 4*u  *u *t  + 4*u  *t*x - 2*u *u *t + u *u *x  - 2*u *x
      t   x         t           t  x      t  x         t

-------- 25. Symmetry:

xi_t=0

xi_x=0

                  4            3            2  2             4              4
eta_u=32*u   *u *t  - 16*u   *t  + 24*u   *t *x  + 16*u    *t  + 16*u  *u *t
          t,x  t          t,x          t,x             2t,x          2t  x

           3          2     4        2  3               3             2  2
 + 32*u  *t *x + 16*u  *u *t  + 32*u  *t *x - 16*u *u *t  + 24*u *u *t *x
       2t            t   x          t             t  x          t  x

          2             3          2            2       4               3
 - 48*u *t *x + 8*u *t*x  - 84*u *t  - 36*u *t*x  + u *x  - 48*t*x - 8*x
       t           t            x          x         x

-------- 26. Symmetry:

xi_t=0

xi_x=0

                  5             4            3  2             5              5
eta_u=64*u   *u *t  + 160*u   *t  + 80*u   *t *x  + 32*u    *t  + 32*u  *u *t
          t,x  t           t,x          t,x             2t,x          2t  x

           4          2     5        2  4                4             3  2
 + 80*u  *t *x + 32*u  *u *t  + 80*u  *t *x + 160*u *u *t  + 80*u *u *t *x
       2t            t   x          t              t  x          t  x

           3            2  3           3           2  2            4       2
 + 240*u *t *x + 40*u *t *x  + 120*u *t  + 120*u *t *x  + 10*u *t*x  + 60*t *x
        t            t              x           x             x

         3    5
 + 20*t*x  + x

-------- 27. Symmetry:

xi_t=0

xi_x=0

                  3            2              2             3              3
eta_u=32*u   *u *t  - 12*u   *t  + 12*u   *t*x  + 16*u    *t  + 16*u  *u *t
          t,x  t          t,x          t,x            2t,x          2t  x

           2          2     3        2  2               2               2
 + 24*u  *t *x + 16*u  *u *t  + 24*u  *t *x - 12*u *u *t  + 12*u *u *t*x
       2t            t   x          t             t  x          t  x

                     3         2
 - 24*u *t*x + 2*u *x  - 9*u *x  + 9*x
       t          t         x

-------- 28. Symmetry:

xi_t=0

xi_x=0

                                                                  2
eta_u=8*u   *u *t - u    + 4*u    *t + 4*u  *u *t + 2*u  *x + 4*u  *u *t
         t,x  t      t,x      2t,x        2t  x        2t        t   x

       2
 + 2*u  *x - u *u
      t       t  x

-------- Further symmetry:

xi_t=0

xi_x=0

       c_85
eta_u=------
         u
        e

with c_85(t,x)
which still has to satisfy: 

0=c_85  - c_85
      t       2x


-------- 

nodepnd {u}$



COMMENT
-------------------------------------------------------
The following example includes the Karpman equations
for three unknown functions in 4 variables. 

If point symmetries are to be computed for a single
equation or a system of equations of higher than first
order then there is the option to formulate at first
preliminary conditions for each equation, have CRACK
solving these conditions before the full set of conditions
is formulated and solved. This strategy is adopted if a
lisp flag prelim_ has the value t. The default value
is nil. 

Similarly, if a system of equations is to be investigated
and a flag individual_ has the value t then symmetry
conditions are formulated and investigated for each
individual equation successively. The default value is nil.

It is advantageous to split a large set of conditions
into smaller sets to be investigated successively if
each set is sufficiently overdetermined to be solvable
quickly. Then any substitutions are done in the smaller
set and the next set of conditions is shorter. For
example, for the Karpman equations below the speedup for
prelim_:=t and individual_:=t is a factor of 10.
(Time ~ 1 min.)$

write"-------------------------------------------------------"$


-------------------------------------------------------


lisp(prelim_:=t)$


lisp(individual_:=t)$



depend r,x,y,z,t$


depend f,x,y,z,t$


depend v,x,y,z,t$



liepde({

first 
solve(
        {df(r,t) + w1*df(r,z)
         + s1*(df(r,x)*df(f,x)+df(r,y)*df(f,y)+r*df(f,x,2)/2+r*df(f,y,2)/2) 
         + s2*(df(r,z)*df(f,z)+r*df(f,z,2)/2),
 
         df(f,t) + w1*df(f,z) 
         - (s1*(df(r,x,2)/r+df(r,y,2)/r-df(f,x)**2-df(f,y)**2) +
            s2*(df(r,z,2)/r-df(f,z)**2))/2 + a1*v,
       
         df(v,t,2) - w2**2*(df(v,x,2)+df(v,y,2)+df(v,z,2))
         - 2*a2*r*(df(r,x,2)+df(r,y,2)+df(r,z,2))
         - 2*a2*(df(r,x)**2+df(r,y)**2+df(r,z)**2)},
         
        {df(v,x,2), df(r,x,2), df(f,x,2)}         
 
     )         
         , {r,f,v}, {x,y,z,t}},

       {"point"}, 
       
       {},{})$


--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single differential equations or systems of de's

The PDE-system under investigation is :

                 2       2     2          2     2          2     2
v  =( - 4*f *a2*r  - 2*f  *a2*r *s1 - 2*f  *a2*r *s1 - 2*f  *a2*r *s2
 2x        t            x                y                z

                 2          2             2
      - 4*f *a2*r *w1 - 2*r  *a2*s1 - 2*r  *a2*s1 - 2*r  *a2*r*s1
           z               x             y             2z

                            2                           2            2
      + 2*r  *a2*r*s2 - 2*r  *a2*s1 + v  *s1 - v  *s1*w2  - v  *s1*w2
           2z              z           2t       2y           2z

                 2          2
      - 4*a1*a2*r *v)/(s1*w2 )

                2          2          2
r  =(2*f *r + f  *r*s1 + f  *r*s1 + f  *r*s2 + 2*f *r*w1 - r  *s1 - r  *s2
 2x     t      x          y          z            z         2y       2z

      + 2*a1*r*v)/s1

f  =
 2x

  - 2*f *r *s1 - f  *r*s1 - 2*f *r *s1 - f  *r*s2 - 2*f *r *s2 - 2*r  - 2*r *w1
       x  x       2y           y  y       2z           z  z         t      z
--------------------------------------------------------------------------------
                                      r*s1

for the function(s) : 

r(z,y,t,x), f(z,y,t,x), v(z,y,t,x)


Start of splitting equations
5 equations result

Start of splitting equations
7 equations result

Start of splitting equations
7 equations result

Start of splitting equations
4 equations result

Start of splitting equations
7 equations result

Start of splitting equations
4 equations result

Start of splitting equations
4 equations result

Start of splitting equations
5 equations result

Start of splitting equations
5 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

e_6 is a consequence of e_1.
e_7 is a consequence of e_2.
e_8 is a consequence of e_3.
e_9 is a consequence of e_4.
e_13 is a consequence of e_4.
e_15 is a consequence of e_11.
e_16 is a consequence of e_12.
e_17 is a consequence of e_4.
e_23 is a consequence of e_3.
e_24 is a consequence of e_2.
e_26 is a consequence of e_11.
e_27 is a consequence of e_12.
e_28 is a consequence of e_4.
e_30 is a consequence of e_19.
e_32 is a consequence of e_21.
e_34 is a consequence of e_3.
e_35 is a consequence of e_1.
e_37 is a consequence of e_20.
e_38 is a consequence of e_31.
e_39 is a consequence of e_22.
e_40 is a consequence of e_33.
e_41 is a consequence of e_2.
e_42 is a consequence of e_1.
e_44 is a consequence of e_1.
e_45 is a consequence of e_2.
e_46 is a consequence of e_3.
e_47 is a consequence of e_4.
new function: c_120(y,z,t,v,f,r)
Integration of e_29

Substitution of xi_t(x,y,z,t,v,f,r) by an expression in 
c_120(y,z,t,v,f,r) found in e_29 : 
xi_t= - c_120


new function: c_121(z,t,v,f,r)
Integration of e_18

Substitution of c_120(y,z,t,v,f,r) by an expression in 
c_121(z,t,v,f,r) found in e_18 : 
c_120= - c_121


new function: c_122(t,v,f,r)
Integration of e_14

Substitution of c_121(z,t,v,f,r) by an expression in 
c_122(t,v,f,r) found in e_14 : 
c_121= - c_122


new function: c_123(t,f,r)
Integration of e_4

Substitution of c_122(t,v,f,r) by an expression in 
c_123(t,f,r) found in e_4 : 
c_122= - c_123


new function: c_124(x,y,z,t,f,r)
Integration of e_3

Substitution of xi_z(x,y,z,t,v,f,r) by an expression in 
c_124(x,y,z,t,f,r) found in e_3 : 
xi_z= - c_124


new function: c_125(x,y,z,t,f,r)
Integration of e_2

Substitution of xi_y(x,y,z,t,v,f,r) by an expression in 
c_125(x,y,z,t,f,r) found in e_2 : 
xi_y= - c_125


new function: c_126(x,y,z,t,f,r)
Integration of e_1

Substitution of xi_x(x,y,z,t,v,f,r) by an expression in 
c_126(x,y,z,t,f,r) found in e_1 : 
xi_x= - c_126


new function: c_127(x,y,z,t,r)
Integration of e_31

Substitution of c_126(x,y,z,t,f,r) by an expression in 
c_127(x,y,z,t,r) found in e_31 : 
c_126= - c_127


new function: c_128(x,y,z,t,r)
Integration of e_20

Substitution of c_125(x,y,z,t,f,r) by an expression in 
c_128(x,y,z,t,r) found in e_20 : 
c_125= - c_128


new function: c_129(x,y,z,t,r)
Integration of e_19

Substitution of c_124(x,y,z,t,f,r) by an expression in 
c_129(x,y,z,t,r) found in e_19 : 
c_124= - c_129


new function: c_130(t,r)
Integration of e_11

Substitution of c_123(t,f,r) by an expression in 
c_130(t,r) found in e_11 : 
c_123= - c_130


new function: c_131(t)
Integration of e_12

Substitution of c_130(t,r) by an expression in 
c_131(t) found in e_12 : 
c_130= - c_131


new function: c_132(x,y,z,t)
Integration of e_21

Substitution of c_129(x,y,z,t,r) by an expression in 
c_132(x,y,z,t) found in e_21 : 
c_129= - c_132


new function: c_133(x,y,z,t)
Integration of e_22

Substitution of c_128(x,y,z,t,r) by an expression in 
c_133(x,y,z,t) found in e_22 : 
c_128= - c_133


new function: c_134(x,y,z,t)
Integration of e_33

Substitution of c_127(x,y,z,t,r) by an expression in 
c_134(x,y,z,t) found in e_33 : 
c_127= - c_134


From now on lexicographic ordering of derivatives.
The current variable ordering is going to be reversed.

>>>>>>>>> Solution : 
equations : 

e_43 : 
0=c_133  + c_134
       x        y


e_36 : 
0=c_132 *s1 + c_134 *s2
       x           z


e_25 : 
0=c_132 *s1 + c_133 *s2
       y           z



Functions : eta_v(r,f,v,t,z,y,x), eta_f(r,f,v,t,z,y,x), eta_r(r,f,v,t,z,y,x), 
xi_t=c_131


xi_z= - c_132


xi_y= - c_133


xi_x= - c_134

c_132(t,z,y,x), c_133(t,z,y,x), c_134(t,z,y,x), c_131(t)
with 11 terms

Variables : r, f, v, t, z, y, x
number of equations : 3
total no of terms   : 6
3 equations in 4 variables: e_25(2),e_36(2),e_43(2)
3 functions with 7 arguments : eta_v(0),eta_f(0),eta_r(0)
3 functions with 4 arguments : c_132(2),c_133(2),c_134(2)
1 function with 1 argument  : c_131(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Remaining free functions after the last CRACK-run:
eta_r(r,f,v,t,z,y,x), eta_f(r,f,v,t,z,y,x), eta_v(r,f,v,t,z,y,x), 
c_132(t,z,y,x), c_133(t,z,y,x), c_134(t,z,y,x), c_131(t)


Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

e_4 is a consequence of e_3.
e_5 is a consequence of e_2.
e_6 is a consequence of e_1.
The current variable ordering is going to be reversed.

>>>>>>>>> Solution : 
equations : 

e_3 : 
0=c_133  + c_134
       x        y


e_2 : 
0=c_132 *s1 + c_134 *s2
       x           z


e_1 : 
0=c_132 *s1 + c_133 *s2
       y           z



Functions : eta_r(r,f,v,t,z,y,x), eta_f(r,f,v,t,z,y,x), eta_v(r,f,v,t,z,y,x), 
c_132(t,z,y,x), c_133(t,z,y,x), c_134(t,z,y,x), c_131(t)
with 7 terms

Variables : r, f, v, t, z, y, x
number of equations : 3
total no of terms   : 6
3 equations in 4 variables: e_1(2),e_2(2),e_3(2)
3 functions with 7 arguments : eta_r(0),eta_f(0),eta_v(0)
3 functions with 4 arguments : c_132(2),c_133(2),c_134(2)
1 function with 1 argument  : c_131(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Remaining free functions after the last CRACK-run:
c_131(t), c_134(t,z,y,x), c_133(t,z,y,x), c_132(t,z,y,x), 
eta_v(r,f,v,t,z,y,x), eta_f(r,f,v,t,z,y,x), eta_r(r,f,v,t,z,y,x)


Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

Start of splitting equations
1 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

e_9 is a consequence of e_6.
new function: c_135(x,y,t)
Integration of e_8

e_10 is a consequence of e_5.
Substitution of c_134(x,y,z,t) by an expression in 
c_135(x,y,t) found in e_8 : 
c_134= - c_135


new function: c_136(x,y,t)
Integration of e_7

e_11 is a consequence of e_3.
Substitution of c_133(x,y,z,t) by an expression in 
c_136(x,y,t) found in e_7 : 
c_133= - c_136


new function: c_137(y,z,t)
Integration of e_5

Substitution of c_132(x,y,z,t) by an expression in 
c_137(y,z,t) found in e_5 : 
c_132= - c_137


new function: c_138(z,t)
Integration of e_3

Substitution of c_137(y,z,t) by an expression in 
c_138(z,t) found in e_3 : 
c_137= - c_138


new function: c_139(z)
Integration of e_1

Substitution of c_138(z,t) by an expression in 
c_139(z) found in e_1 : 
c_138= - c_139


new function: c_140(x,y)
Integration of e_2

Substitution of c_136(x,y,t) by an expression in 
c_140(x,y) found in e_2 : 
c_136= - c_140


new function: c_141(x,y)
Integration of e_4

Substitution of c_135(x,y,t) by an expression in 
c_141(x,y) found in e_4 : 
c_135= - c_141



>>>>>>>>> Solution : 
equations : 

e_6 : 
0=c_140  + c_141
       x        y



Functions : eta_v(x,y,z,t,v,f,r), eta_f(x,y,z,t,v,f,r), eta_r(x,y,z,t,v,f,r), 
c_134=c_141


c_133=c_140


c_132= - c_139

c_131(t), c_140(x,y), c_141(x,y), c_139(z)
with 10 terms

Variables : x, y, z, t, v, f, r
number of equations : 1
total no of terms   : 2
1 equation in 2 variables: e_6(2)
3 functions with 7 arguments : eta_v(0),eta_f(0),eta_r(0)
2 functions with 2 arguments : c_140(1),c_141(1)
2 functions with 1 argument  : c_131(0),c_139(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Remaining free functions after the last CRACK-run:
c_131(t), eta_r(x,y,z,t,v,f,r), eta_f(x,y,z,t,v,f,r), 
eta_v(x,y,z,t,v,f,r), c_140(x,y), c_141(x,y), c_139(z)


Start of splitting equations
39 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

e_6 is a consequence of e_3.
e_7 is a consequence of e_1.
e_8 is a consequence of e_3.
e_10 is a consequence of e_4.
e_13 is a consequence of e_1.
e_15 is a consequence of e_4.
e_22 is a consequence of e_19.
e_23 is a consequence of e_20.
e_26 is a consequence of e_20.
e_32 is a consequence of e_30.
e_34 is a consequence of e_30.
e_36 is a consequence of e_28.
e_38 is a consequence of e_28.
e_40 is a consequence of e_3.
new function: c_142(x,y,z,t,f,r)
Integration of e_37

Substitution of eta_r(x,y,z,t,v,f,r) by an expression in 
c_142(x,y,z,t,f,r) found in e_37 : 
eta_r= - c_142


new function: c_143(x,y,z,t,f,r)
Integration of e_28

e_25 is a consequence of e_19.
Substitution of eta_f(x,y,z,t,v,f,r) by an expression in 
c_143(x,y,z,t,f,r) found in e_28 : 
eta_f= - c_143


Separation of e_39 yields (e_41 e_42)

new function: c_144(x,y,z,t,f)
Integration of e_41

Substitution of c_143(x,y,z,t,f,r) by an expression in 
c_144(x,y,z,t,f) found in e_41 : 
c_143= - c_144


new function: c_145(y,z,t,f)
Integration of e_21

Substitution of c_144(x,y,z,t,f) by an expression in 
c_145(y,z,t,f) found in e_21 : 
c_144= - c_145


new function: c_146(x,y,z,t,r)
Integration of e_18

Substitution of c_142(x,y,z,t,f,r) by an expression in 
c_146(x,y,z,t,r) found in e_18 : 
c_142= - c_146


new function: c_147(z,t,f)
Integration of e_24

Substitution of c_145(y,z,t,f) by an expression in 
c_147(z,t,f) found in e_24 : 
c_145= - c_147


new function: c_148(z,t)
new function: c_149(z,t)
Integration of e_1

Substitution of c_147(z,t,f) by an expression in 
c_149(z,t), c_148(z,t) found in e_1 : 
c_147= - (c_148 + c_149*f)


Separation of e_42 yields (e_43 e_44)

Separation of e_27 yields (e_45 e_46)

new function: c_150(t)
Integration of e_45

Substitution of c_149(z,t) by an expression in 
c_150(t) found in e_45 : 
c_149= - c_150


generalized separation of e_17
new function: c_151(x)
separation yields 2 new equations : e_48,e_47

generalized separation of e_48
new constant: c_152
separation yields 2 new equations : e_50,e_49

Substitution of c_151(x) by an expression in 
c_152 found in e_50 : 
c_151= - c_152


The current variable ordering is going to be reversed.

>>>>>>>>> Solution : 
equations : 

e_47 : 
0=c_141  - c_152
       x


e_49 : 
0=c_139  + c_152
       z


e_12 : 
0=c_140  - c_141
       y        x


e_3 : 
0=c_140  + c_141
       x        y


e_16 : 
0=c_139  *r - 2*c_146
       2z            z


e_2 : 
0=c_146 *r - c_146
       r


e_11 : 
0=c_140  *r + c_140  *r + 2*c_146
       2x          2y            y


e_5 : 
0=c_141  *r + c_141  *r + 2*c_146
       2x          2y            x


e_44 : 
0=2*c_146  + 2*c_146 *w1 - c_148  *r*s2
         t          z           2z


e_14 : 
0=2*c_139 *r + 2*c_141 *r - c_146 *r + c_146
         z            x          r


e_9 : 
0=2*c_140 *r - 2*c_141 *r + c_146 *r - c_146
         y            x          r


e_29 : 
0=c_131 *r + 2*c_141 *r - c_146 *r + c_146 + c_150*r
       t            x          r


e_46 :  6 terms, with derivatives of functions of all 5 variables: r,t,z,y,x

 (c_146 ,c_146)
       r



Functions : 
eta_r=c_146


eta_f= - c_148 + c_150*f

eta_v(r,f,v,t,z,y,x), c_140(y,x), c_141(y,x), c_131(t), c_139(z), 
c_146(r,t,z,y,x), c_148(t,z), c_150(t), c_152
with 12 terms

Variables : r, f, v, t, z, y, x
number of equations : 13
total no of terms   : 40
9 equations in 5 variables: e_46(6),e_29(5),e_9(4),e_14(4),e_44(3),
  e_5(3),e_11(3),e_2(2),e_16(2)
3 equations in 2 variables: e_3(2),e_12(2),e_47(2)
1 equation in 1 variable: e_49(2)
1 function with 7 arguments : eta_v(0)
1 function with 5 arguments : c_146(9)
3 functions with 2 arguments : c_140(4),c_141(8),c_148(2)
3 functions with 1 argument  : c_131(1),c_139(4),c_150(2)
1 constant : c_152(2)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Remaining free functions after the last CRACK-run:
c_139(z), c_131(t), c_141(y,x), c_140(y,x), eta_v(r,f,v,t,z,y,x), 
c_146(r,t,z,y,x), c_148(t,z), c_150(t), c_152


Start of splitting equations
36 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

contradiction : 28 factors in 5 terms

Start of splitting equations
47 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

e_8 is a consequence of e_4.
e_9 is a consequence of e_5.
e_22 is a consequence of e_3.
e_26 is a consequence of e_23.
e_38 is a consequence of e_3.
e_39 is a consequence of e_36.
e_45 is a consequence of e_36.
e_50 is a consequence of e_3.
e_55 is a consequence of e_51.
e_56 is a consequence of e_52.
e_59 is a consequence of e_51.
e_60 is a consequence of e_52.
e_66 is a consequence of e_3.
e_67 is a consequence of e_63.
e_68 is a consequence of e_64.
e_70 is a consequence of e_41.
e_72 is a consequence of e_64.
e_78 is a consequence of e_76.
e_80 is a consequence of e_76.
e_83 is a consequence of e_82.
e_87 is a consequence of e_41.
e_88 is a consequence of e_3.
new function: c_153(x,y,z,t,f,r)
Integration of e_82

e_23 is a consequence of e_33.
e_63 is a consequence of e_71.
e_52 is a consequence of e_81.
e_42 is a consequence of e_36.
e_74 is a consequence of e_44.
e_29 is a consequence of e_33.
Substitution of eta_r(x,y,z,t,v,f,r) by an expression in 
c_153(x,y,z,t,f,r) found in e_82 : 
eta_r= - c_153


new function: c_154(x,y,z,t,f,r)
Integration of e_81

e_13 is a consequence of e_18.
e_5 is a consequence of e_18.
Substitution of eta_f(x,y,z,t,v,f,r) by an expression in 
c_154(x,y,z,t,f,r) found in e_81 : 
eta_f= - c_154


new function: c_155(x,y,z,t,v,r)
Integration of e_20

e_15 is a consequence of e_75.
Substitution of eta_v(x,y,z,t,v,f,r) by an expression in 
c_155(x,y,z,t,v,r) found in e_20 : 
eta_v= - c_155


new function: c_156(x,y,z,t,r)
Integration of e_75

e_53 is a consequence of e_6.
e_57 is a consequence of e_10.
e_51 is a consequence of e_4.
e_12 is a consequence of e_4.
Substitution of c_153(x,y,z,t,f,r) by an expression in 
c_156(x,y,z,t,r) found in e_75 : 
c_153= - c_156


new function: c_157(x,y,z,t,r)
new function: c_158(x,y,z,t,r)
Integration of e_36

Substitution of c_155(x,y,z,t,v,r) by an expression in 
c_158(x,y,z,t,r), c_157(x,y,z,t,r) found in e_36 : 
c_155= - (c_157 + c_158*v)


Separation of e_34 yields (e_99 e_98)

Separation of e_32 yields (e_101 e_100)

Separation of e_35 yields (e_103 e_102)

e_102 is a consequence of e_33.
Separation of e_27 yields (e_8 e_9)

Separation of e_24 yields (e_22 e_26)

Separation of e_21 yields (e_38 e_39)

e_38 is a consequence of e_100.
Separation of e_25 yields (e_45 e_50)

e_45 is a consequence of e_100.
Separation of e_19 yields (e_55 e_56)

e_55 is a consequence of e_33.
Separation of e_31 yields (e_59 e_60)

e_59 is a consequence of e_33.
Separation of e_28 yields (e_66 e_67)

e_66 is a consequence of e_100.
Separation of e_2 yields (e_68 e_70)

e_68 is a consequence of e_33.
Separation of e_7 yields (e_72 e_78)

e_72 is a consequence of e_33.
Separation of e_11 yields (e_80 e_83)

e_80 is a consequence of e_33.
Separation of e_14 yields (e_87 e_88)

e_87 is a consequence of e_33.
Separation of e_30 yields (e_79 e_77)

Separation of e_84 yields (e_76 e_64)

Separation of e_48 yields (e_23 e_63 e_52)

e_23 is a consequence of e_33.
new function: c_159(y,z,t,f,r)
Integration of e_6

Substitution of c_154(x,y,z,t,f,r) by an expression in 
c_159(y,z,t,f,r) found in e_6 : 
c_154= - c_159


new function: c_160(y,z,t,f)
Integration of e_4

Substitution of c_159(y,z,t,f,r) by an expression in 
c_160(y,z,t,f) found in e_4 : 
c_159= - c_160


new function: c_161(x,y,z,t)
Integration of e_103

Substitution of c_157(x,y,z,t,r) by an expression in 
c_161(x,y,z,t) found in e_103 : 
c_157= - c_161


new function: c_162(x,y,z,t)
Integration of e_33

Substitution of c_158(x,y,z,t,r) by an expression in 
c_162(x,y,z,t) found in e_33 : 
c_158= - c_162


new function: c_163(x,y,z,t)
new function: c_164(x,y,z,t)
Integration of e_71

Substitution of c_156(x,y,z,t,r) by an expression in 
c_164(x,y,z,t), c_163(x,y,z,t) found in e_71 : 
c_156= - (c_163 + c_164*r)


Separation of e_9 yields (e_74 e_42)

Separation of e_26 yields (e_82 e_29)

Separation of e_77 yields (e_5 e_13)

Separation of e_64 yields (e_18 e_81)

Separation of e_52 yields (e_16 e_15 e_17)

e_67 is a consequence of e_44.
e_50 is a consequence of e_41.
Substitution of c_162(x,y,z,t) by an expression in 
c_164(x,y,z,t) found in e_39 : 
c_162=2*c_164


new function: c_165(y,z,t)
Integration of e_29

e_65 is a consequence of e_37.
Substitution of c_164(x,y,z,t) by an expression in 
c_165(y,z,t) found in e_29 : 
c_164= - c_165


new function: c_166(y,z,t)
Integration of e_82

Substitution of c_163(x,y,z,t) by an expression in 
c_166(y,z,t) found in e_82 : 
c_163= - c_166


new function: c_167(z,t)
Integration of e_74

e_18 is a consequence of e_16.
Substitution of c_166(y,z,t) by an expression in 
c_167(z,t) found in e_74 : 
c_166= - c_167


new function: c_168(z,t)
Integration of e_42

e_40 is a consequence of e_69.
Substitution of c_165(y,z,t) by an expression in 
c_168(z,t) found in e_42 : 
c_165= - c_168


new function: c_169(z,t,f)
Integration of e_10

Substitution of c_160(y,z,t,f) by an expression in 
c_169(z,t,f) found in e_10 : 
c_160= - c_169


new function: c_170(t)
Integration of e_5

Substitution of c_167(z,t) by an expression in 
c_170(t) found in e_5 : 
c_167= - c_170


new function: c_171(t)
replacing df(c_131,t) by c_171(t)

new function: c_172(z)
replacing df(c_139,z) by c_172(z)

e_43 is a consequence of e_73.
e_44 is a consequence of e_85.
e_13 is a consequence of e_73.
Substitution of c_172(z) by an expression in 
c_152 found in e_86 : 
c_172= - c_152


new function: c_173(x,y,t,r)
Integration of e_89

Substitution of c_146(x,y,z,t,r) by an expression in 
c_173(x,y,t,r) found in e_89 : 
c_146= - c_173


new function: c_174(t)
Integration of e_73

e_17 is a consequence of e_81.
Substitution of c_168(z,t) by an expression in 
c_174(t) found in e_73 : 
c_168= - c_174


e_95 is a consequence of e_41.
e_94 is a consequence of e_85.
Substitution of c_173(x,y,t,r) by an expression in 
c_141(x,y), c_174(t) found in e_76 : 
c_173=r*( - 2*c_141  + c_174)
                   x


Separation of e_63 yields (e_51 e_57)

e_57 is a consequence of e_85.
e_83 is a consequence of e_49.
Substitution of c_174(t) by an expression in 
c_152 found in e_60 : 
c_174=c_152


new function: c_175(t)
new function: c_176(t)
Integration of e_93

Substitution of c_148(z,t) by an expression in 
c_176(t), c_175(t) found in e_93 : 
c_148= - (c_175 + c_176*z)


new constant: c_177
Integration of e_46

Substitution of c_171(t) by an expression in 
c_177 found in e_46 : 
c_171= - c_177


new function: c_178(z,t)
Integration of e_58

e_70 is a consequence of e_85.
e_49 is a consequence of e_85.
Substitution of c_169(z,t,f) by an expression in 
c_178(z,t) found in e_58 : 
c_169= - c_178


Separation of e_81 yields (e_12 e_75)

new constant: c_179
Integration of e_12

Substitution of c_150(t) by an expression in 
c_179 found in e_12 : 
c_150= - c_179


Substitution of c_161(x,y,z,t) by an expression in 
c_178(z,t), c_176(t), c_175(t) found in e_75 : 
       c_175  + c_176 *z - c_178 *w1
            t        t          z
c_161=-------------------------------
                    a1


e_56 is a consequence of e_85.
Substitution of c_177 by an expression in 
c_152, c_179 found in e_62 : 
c_177=2*c_152 + c_179


new function: c_180(t)
Integration of e_61

e_88 is a consequence of e_85.
Substitution of c_178(z,t) by an expression in 
c_180(t), c_152 found in e_61 : 
        - (c_152*w1*z + c_180)
c_178=-------------------------
                 s2


Separation of e_15 yields (e_34 e_36)

new constant: c_181
new constant: c_182
new constant: c_183
Integration of e_36

Substitution of c_176(t) by an expression in 
c_183, c_182, c_181 found in e_36 : 
                           2
        - 2*c_181 - c_182*t  - 2*c_183*t
c_176=-----------------------------------
                       2


Separation of e_97 yields (e_35 e_32 e_102)

Substitution of c_183 found in e_35 : 
c_183=0


Substitution of c_182 found in e_32 : 
c_182=0


new constant: c_184
new constant: c_185
new constant: c_186
Integration of e_34

Substitution of c_175(t) by an expression in 
c_186, c_185, c_184 found in e_34 : 
                           2
        - 2*c_184 - c_185*t  - 2*c_186*t
c_175=-----------------------------------
                       2


new function: c_187(y)
Integration of e_85

e_41 is a consequence of e_54.
e_92 is a consequence of e_37.
e_91 is a consequence of e_69.
e_78 is a consequence of e_54.
Substitution of c_141(x,y) by an expression in 
c_187(y), c_152 found in e_85 : 
c_141=c_152*x - c_187


Substitution of c_179 found in e_96 : 
c_179=0


Substitution of c_152 found in e_47 : 
c_152=0


Substitution of c_181 found in e_102 : 
c_181=0


new constant: c_188
Integration of e_53

Substitution of c_139(z) by an expression in 
c_188 found in e_53 : 
c_139= - c_188


new function: c_189(x)
Integration of e_54

Substitution of c_140(x,y) by an expression in 
c_189(x) found in e_54 : 
c_140= - c_189


new constant: c_190
new constant: c_191
Integration of e_37

Substitution of c_187(y) by an expression in 
c_191, c_190 found in e_37 : 
c_187= - (c_190 + c_191*y)


new constant: c_192
Integration of e_20

Substitution of c_131(t) by an expression in 
c_192 found in e_20 : 
c_131= - c_192


new constant: c_193
new constant: c_194
Integration of e_69

Substitution of c_189(x) by an expression in 
c_194, c_193 found in e_69 : 
c_189= - (c_193 + c_194*x)


Substitution of c_191 by an expression in 
c_194 found in e_3 : 
c_191= - c_194



>>>>>>>>> Solution : 
no equations


Functions : 
       c_180
eta_f=-------
        s2


eta_r=c_170


       c_185*t + c_186
eta_v=-----------------
             a1


c_146=0


c_141=c_190 - c_194*y


c_140=c_193 + c_194*x


                        2
       2*c_184 + c_185*t  + 2*c_186*t
c_148=--------------------------------
                     2


c_139= - c_188


c_131= - c_192


c_150=0


c_152=0

c_170(t), c_180(t), c_186, c_185, c_184, c_188, c_190, c_192, 
c_194, c_193
with 26 terms

Variables : x, y, z, t, v, f, r
no equations
2 functions with 1 argument  : c_170(0),c_180(0)
8 constants : c_186(0),c_185(0),c_184(0),
  c_188(0),c_190(0),c_192(0),c_194(0),c_193(0)

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------- 1. Symmetry:

xi_x=0

xi_y=1

xi_z=0

xi_t=0

eta_r=0

eta_f=0

eta_v=0

-------- 2. Symmetry:

xi_x= - y

xi_y=x

xi_z=0

xi_t=0

eta_r=0

eta_f=0

eta_v=0

-------- 3. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=1

eta_r=0

eta_f=0

eta_v=0

-------- 4. Symmetry:

xi_x=1

xi_y=0

xi_z=0

xi_t=0

eta_r=0

eta_f=0

eta_v=0

-------- 5. Symmetry:

xi_x=0

xi_y=0

xi_z=1

xi_t=0

eta_r=0

eta_f=0

eta_v=0

-------- 6. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=0

eta_r=0

eta_f=1

eta_v=0

-------- 7. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=0

eta_r=0

          2
eta_f= - t

       2*t
eta_v=-----
       a1

-------- 8. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=0

eta_r=0

eta_f= - t

       1
eta_v=----
       a1

-------- 9. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=0

eta_r=0

eta_f=0

eta_v=0

with c_180(t)

-------- 10. Symmetry:

xi_x=0

xi_y=0

xi_z=0

xi_t=0

eta_r=0

eta_f=0

eta_v=0

with c_170(t)


-------- 


nodepnd {r,f,v}$



COMMENT
-------------------------------------------------------
In the following example a system of two equations (by
V.Sokolov) is investigated concerning a special ansatz for
4th order symmetries. The ansatz for the symmetries includes
two unknown functions f,g. Because x is the second variable
in the list of variables {t,x}, the name u!`2 stands for
df(u,x).
Because higher order symmetries are investigated we have
to set prelim_:=nil. The symmetries to be calculated are
lengthy and therefore conditions are not very overdetermined.
In that case CRACK can take long to solve a single 
subset of conditions. The complete set of conditions would
have been more overdetermined and easier to solve. Therefore
the advantage of first formulating all conditions and then
solving them together with one CRACK call is that having
more equations, the chance of finding short integrable
equations among then is higher, i.e. CRACK has more freedom
in optimizing the computation. Therefore individual_:=nil
is more appropriate in this example.

Because 4th order conditions are to be computed the
`binding stack size' is increased.
(Time ~ 5 min.)$

write"-------------------------------------------------------"$


-------------------------------------------------------


lisp(prelim_:=nil)$


lisp(individual_:=nil)$


lisp(if getd 'set_bndstk_size then set_bndstk_size(7000))$



nodepnd {u,v}$


depend  u,x,t$


depend  v,x,t$



des:={df(u,t)=+df(u,x,2) + (u + v)*df(u,x) + u*df(v,x),
      df(v,t)=-df(v,x,2) + (u + v)*df(v,x) + v*df(u,x)
     }$



nodepnd {f,g}$


depend f,t,x,u,v,u!`2,v!`2,u!`2!`2,v!`2!`2,u!`2!`2!`2,v!`2!`2!`2$


depend g,t,x,u,v,u!`2,v!`2,u!`2!`2,v!`2!`2,u!`2!`2!`2,v!`2!`2!`2$


liepde({des,{u,v},{t,x}},
       {xi_t=0,
        xi_x=0,
        eta_u=+df(u,x,4)+f,
        eta_v=-df(v,x,4)+g
       },
       {f,g},{}
      )$

Your ansatz for the symmetry needs to be homogeneous, i.e. 
substituting all unknown functions and constants to be computed 
(which do not occur in the equation) to zero needs to make the 
symmetry to zero. In your ansatz this is not 
the case because the list of substitutions:
{g=0,f=0}
leaves this right hand side non-zero:
eta_u=u
       4x
To fix your ansatz you could, for example, simply multiply all 
non-vanishing parts on all right hand sides in your ansatz with one 
and the same unknown constant, say cc, and add cc to the list of unknowns 
to be computed and to the list of non-vanishing expressions.
Your ansatz for the symmetry needs to be homogeneous, i.e. 
substituting all unknown functions and constants to be computed 
(which do not occur in the equation) to zero needs to make the 
symmetry to zero. In your ansatz this is not 
the case because the list of substitutions:
{g=0,f=0}
leaves this right hand side non-zero:
eta_v= - v
          4x
To fix your ansatz you could, for example, simply multiply all 
non-vanishing parts on all right hand sides in your ansatz with one 
and the same unknown constant, say cc, and add cc to the list of unknowns 
to be computed and to the list of non-vanishing expressions.
nodepnd {f,g}$



COMMENT
-------------------------------------------------------
A relative new feature of the package CRACK is to be able to solve
non-linear problems where unknowns to be determined may appear in
exponents. This is the case when parameters in a differential equation
is to be determined such that symmetries exist. The following ODE is
such an example where the exponent `n' is to be determined so that
the ODE has one or more symmetries. 
  Something else is demonstrated in the following example. The
parameter prolong_order allows to compute and print the prolongation
of each of the found symmetry generators. In the following example
all found symmetry generators are prolonged to order 2.$

write"-------------------------------------------------------"$


-------------------------------------------------------


lisp(prolong_order:=2)$


depend y,x$


liepde({df(y,x,2) = x**n*y**2,y,x},{"point"},{n},{})$


--------------------------------------------------------------------------

This is LIEPDE - a program for calculating infinitesimal symmetries
of single differential equations or systems of de's

The ODE under investigation is :

     n  2
y  =x *y
 2x

for the function(s) : 

y(x)


Start of splitting equations
4 equations result

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This is CRACK - a solver for overdetermined partial differential equations

new function: c_195(x)
new function: c_196(x)
Integration of e_1

Substitution of xi_x(x,y) by an expression in 
c_196(x), c_195(x) found in e_1 : 
xi_x= - (c_195 + c_196*y)


new function: c_197(x)
new function: c_198(x)
Integration of e_2

Substitution of eta_y(x,y) by an expression in 
c_196(x), c_198(x), c_197(x) found in e_2 : 
                  2
eta_y= - (c_196 *y  + c_197 + c_198*y)
               x


Separation of e_3 yields (e_6 e_5 e_7)

Separation of e_4 yields (e_11 e_10 e_8 e_9)

Substitution of c_196(x) found in e_5 : 
c_196=0


new constant: c_199
new constant: c_200
Integration of e_11

Substitution of c_197(x) by an expression in 
c_200, c_199 found in e_11 : 
c_197= - (c_199 + c_200*x)


new constant: c_201
Integration of e_7

Substitution of c_198(x) by an expression in 
c_195(x), c_201 found in e_7 : 
       c_195  + c_201
            x
c_198=----------------
             2


Inhomogeneous part: 
   n              n
4*x *c_200*x + 4*x *c_199

can not be integrated explicitly wrt. x
The integrated equation: 
   (2*n)/5
5*x       *c_195


An integrating factor has been found:
  (2*n)/5
 x
----------
    x


Inhomogeneous part: 
 (2*n)/5
x       *c_201

can not be integrated explicitly wrt. x
New level :     1.

CRACK is now called with assuming  

2*n + 5

 to be nonzero. 
The list of inequalities got extended by: 
2*n + 5


New level :     1.1.

CRACK is now called with assuming  

 2
n  + 3*n + 2

 to be nonzero. 
The list of inequalities got extended by: 
n + 2


The list of inequalities got extended by: 
n + 1


Inhomogeneous part: 
    n                n              n          2      n        2
 4*x *c_199*n*x + 8*x *c_199*x + 4*x *c_200*n*x  + 4*x *c_200*x
-----------------------------------------------------------------
                           2
                          n  + 3*n + 2

can not be integrated explicitly wrt. x
new constant: c_202
Inhomogeneous part: 
                             2      n        2      n          2      n
2*c_202 + 3*c_202*n + c_202*n  + 4*x *c_200*x  + 4*x *c_200*n*x  + 8*x *c_199*x

      n
 + 4*x *c_199*n*x

can not be integrated explicitly wrt. x
Not enough integrations to solve for a function, or,
substitution prevented through non-linearity.
new constant: c_203
Integration of e_9

Substitution of c_195(x) by an expression in 
n, c_201, c_203 found in e_9 : 
           (2*n)/5
        - x       *c_201*x + 2*c_203*n + 5*c_203
c_195=-------------------------------------------
                   (2*n)/5
                  x       *(2*n + 5)


New level :     1.1.1.

CRACK is now called with assuming  

n + 3

 to be nonzero. 
The list of inequalities got extended by: 
n + 3


The list of inequalities got extended by: 
 3      2
n  + 6*n  + 11*n + 6


Separation of e_12 leads to one or more case distinctions.

New level :     1.1.1.1.

CRACK is now called with assuming  

7*n + 15

 to be nonzero. 
The list of inequalities got extended by: 
7*n + 15


Separation of e_12 leads to one or more case distinctions.

New level :     1.1.1.1.1.

CRACK is now called with assuming  

7*n + 20

 to be nonzero. 
The list of inequalities got extended by: 
7*n + 20


Separation of e_12 yields (e_15 e_14 e_13)

Substitution of c_199 found in e_15 : 
c_199=0


Substitution of c_200 found in e_14 : 
c_200=0


New level :     1.1.1.1.1.1.

CRACK is now called with assuming  

n + 5

 to be nonzero. 
The list of inequalities got extended by: 
n + 5


New level :     1.1.1.1.1.1.1.

CRACK is now called with assuming  

n

 to be nonzero. 
The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: n,c_201,c_203
New ordering: c_201,c_203,n

Substitution of c_203 found in e_13 : 
c_203=0



>>>>>>>>> Solution of level 1111111 : 
no equations


Non-vanishing expressions: n

n + 5


7*n + 20


7*n + 15


 3      2
n  + 6*n  + 11*n + 6


n + 3


2*n + 5


n + 2


n + 1


Functions : 
       c_201*y*( - n - 2)
eta_y=--------------------
            2*n + 5


      c_201*x
xi_x=---------
      2*n + 5

n, c_201
with 9 terms

Variables : x, y
no equations
2 constants : c_201(0),n(0)

Back to level : 1.1.1.1.1.1.

New level :     1.1.1.1.1.1.2.

CRACK is now called with the assumption 0 = e_21 : 
0=n

e_13 is a consequence of e_21

Substitution of n found in e_21 : 
n=0



>>>>>>>>> Solution of level 1111112 : 
no equations


Functions : 
        - 2*c_201*y
eta_y=--------------
            5


      c_201*x - 5*c_203
xi_x=-------------------
              5


n=0

c_201, c_203
with 7 terms

Variables : x, y
no equations
2 constants : c_201(0),c_203(0)

Back to level : 1.1.1.1.1.1.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.1.1.1.1.

New level :     1.1.1.1.1.2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: n,c_201,c_203
New ordering: c_201,c_203,n
CRACK is now called with the assumption 0 = e_19 : 
0=n + 5

e_13 is a consequence of e_19

Substitution of n found in e_19 : 
n= - 5



>>>>>>>>> Solution of level 111112 : 
no equations


Functions : 
       y*( - 3*c_201 - 5*c_203*x)
eta_y=----------------------------
                   5


      x*( - c_201 - 5*c_203*x)
xi_x=--------------------------
                 5


n= - 5

c_201, c_203
with 9 terms

Variables : x, y
no equations
2 constants : c_201(0),c_203(0)

Back to level : 1.1.1.1.1.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.1.1.1.

New level :     1.1.1.1.2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: n,c_200,c_199,c_201,c_203
New ordering: c_200,c_199,c_201,c_203,n
CRACK is now called with the assumption 0 = e_13 : 
0=7*n + 20


The list of inequalities got extended by: 
n


Substitution of n found in e_13 : 
    - 20
n=-------
     7


Separation of e_14 yields (e_16 e_15)

Substitution of c_199 found in e_16 : 
c_199=0


Substitution of c_203 by an expression in 
c_200 found in e_15 : 
       343*c_200
c_203=-----------
          12



>>>>>>>>> Solution of level 11112 : 
no equations


Non-vanishing expressions: n

Functions : 
               8/7                     2
        - 245*x   *c_200*y + 15*c_200*x  - 18*c_201*x*y
eta_y=--------------------------------------------------
                             15*x


                 8/7
      7*( - 245*x   *c_200 - 12*c_201*x)
xi_x=------------------------------------
                      60


    - 20
n=-------
     7

c_200, c_201
with 11 terms

Variables : x, y
no equations
2 constants : c_200(0),c_201(0)

Back to level : 1.1.1.1.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.1.1.

New level :     1.1.1.2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: n,c_200,c_199,c_201,c_203
New ordering: c_200,c_199,c_201,c_203,n
CRACK is now called with the assumption 0 = e_13 : 
0=7*n + 15


The list of inequalities got extended by: 
n


Substitution of n found in e_13 : 
    - 15
n=-------
     7


Separation of e_14 yields (e_15 e_16)

Substitution of c_200 found in e_15 : 
c_200=0


Substitution of c_203 by an expression in 
c_199 found in e_16 : 
        - 343*c_199
c_203=--------------
            12



>>>>>>>>> Solution of level 1112 : 
no equations


Non-vanishing expressions: n

Functions : 
            6/7
       245*x   *c_199*y + 20*c_199*x + 4*c_201*x*y
eta_y=---------------------------------------------
                          20*x


              6/7
      7*(245*x   *c_199 + 12*c_201*x)
xi_x=---------------------------------
                    60


    - 15
n=-------
     7

c_199, c_201
with 11 terms

Variables : x, y
no equations
2 constants : c_199(0),c_201(0)

Back to level : 1.1.1.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.1.

New level :     1.1.2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: n,c_200,c_199,c_201,c_203
New ordering: c_200,c_199,c_201,c_203,n
CRACK is now called with the assumption 0 = e_13 : 
0=n + 3


New level :     1.1.2.1.

CRACK is now called with assuming  

n + 3

 to be nonzero. 
The list of inequalities got extended by: 
n + 3


contradiction : 
0=n + 3

According to the system of equations, this expression must be zero!
 --> Next case.
Back to level : 1.1.2.

New level :     1.1.2.2.

CRACK is now called with the assumption 0 = e_14 : 
0=n + 3


e_14 is a consequence of e_13.
The list of inequalities got extended by: 
n


Substitution of n found in e_13 : 
n= - 3


Separation of e_15 yields (e_18 e_17 e_16)

Substitution of c_199 found in e_18 : 
c_199=0


Substitution of c_200 found in e_17 : 
c_200=0


Substitution of c_203 found in e_16 : 
c_203=0



>>>>>>>>> Solution of level 1122 : 
no equations


Non-vanishing expressions: n

Functions : 
eta_y= - c_201*y


xi_x= - c_201*x


n= - 3

c_201
with 4 terms

Variables : x, y
no equations
1 constant : c_201(0)

Back to level : 1.1.2.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.1.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.

New level :     1.2.

CRACK is now called with the assumption 0 = e_12 : 
   2
0=n  + 3*n + 2


New level :     1.2.1.

CRACK is now called with assuming  

n + 1

 to be nonzero. 
The list of inequalities got extended by: 
n + 1


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: c_195,n,c_200,c_199,c_201
New ordering: c_195,c_200,c_199,c_201,n

Substitution of n found in e_12 : 
n= - 2


new constant: c_204
Integration of e_16

Substitution of c_195(x) by an expression in 
c_201, c_204 found in e_16 : 
       4/5
c_195=x   *c_204 - c_201*x


Separation of e_15 yields (e_19 e_18 e_17)

Substitution of c_204 found in e_19 : 
c_204=0


Substitution of c_199 found in e_18 : 
c_199=0


Substitution of c_200 found in e_17 : 
c_200=0



>>>>>>>>> Solution of level 121 : 
no equations


Functions : 
eta_y=0


xi_x=c_201*x


n= - 2

c_201
with 3 terms

Variables : x, y
no equations
1 constant : c_201(0)

Back to level : 1.2.

New level :     1.2.2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: c_195,n,c_200,c_199,c_201
New ordering: c_195,c_200,c_199,c_201,n
CRACK is now called with the assumption 0 = e_15 : 
0=n + 1

e_12 is a consequence of e_15

Substitution of n found in e_15 : 
n= - 1


new constant: c_205
Integration of e_17

Substitution of c_195(x) by an expression in 
c_201, c_205 found in e_17 : 
          2/5
       3*x   *c_205 - c_201*x
c_195=------------------------
                 3


Separation of e_16 yields (e_21 e_19 e_18)

Substitution of c_205 found in e_21 : 
c_205=0


Substitution of c_199 found in e_19 : 
c_199=0


Substitution of c_200 found in e_18 : 
c_200=0



>>>>>>>>> Solution of level 122 : 
no equations


Functions : 
        - c_201*y
eta_y=------------
           3


      c_201*x
xi_x=---------
         3


n= - 1

c_201
with 6 terms

Variables : x, y
no equations
1 constant : c_201(0)

Back to level : 1.2.

This completes the investigation of all cases of a case-distinction.

Back to level : 1.

This completes the investigation of all cases of a case-distinction.

New level :     2.


The list of inequalities got extended by: 
n

The lexicographical ordering of unknowns is changed
because n has to be non-zero, giving n a low priority.
Old ordering: c_195,n,c_200,c_199,c_201
New ordering: c_195,c_200,c_199,c_201,n
CRACK is now called with the assumption 0 = e_12 : 
0=2*n + 5


New level :     2.1.

CRACK is now called with assuming  

 2
n  + 3*n + 2

 to be nonzero. 
The list of inequalities got extended by: 
n + 2


The list of inequalities got extended by: 
n + 1


Substitution of n found in e_12 : 
    - 5
n=------
    2


new constant: c_206
Integration of e_14

Substitution of c_195(x) by an expression in 
c_201, c_206 found in e_14 : 
       x*( - log(x)*c_201 + 5*c_206)
c_195=-------------------------------
                     5


Separation of e_15 yields (e_18 e_17 e_16)

Substitution of c_199 found in e_18 : 
c_199=0


Substitution of c_200 found in e_17 : 
c_200=0


Substitution of c_201 found in e_16 : 
c_201=0



>>>>>>>>> Solution of level 21 : 
no equations


Functions : 
        - c_206*y
eta_y=------------
           2


xi_x= - c_206*x


    - 5
n=------
    2

c_206
with 6 terms

Variables : x, y
no equations
1 constant : c_206(0)

Back to level : 2.

New level :     2.2.

CRACK is now called with the assumption 0 = e_13 : 
   2
0=n  + 3*n + 2


Substitution of n found in e_12 : 
    - 5
n=------
    2


leads to a contradiction in : 
   2
0=n  + 3*n + 2


Back to level : 2.

This completes the investigation of all cases of a case-distinction.

This completes the investigation of all cases of a case-distinction.

This is the end of the CRACK run
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------- 1. Symmetry:

         x
xi_x=---------
      2*n + 5

        - n*y - 2*y
eta_y=--------------
         2*n + 5

         - y *n - 3*y
            x        x
eta_yx=----------------
           2*n + 5

             n    2      n  2
          - x *n*y  - 4*x *y
eta_yxx=----------------------
               2*n + 5


-------- 2. Symmetry:

n=-2

xi_x=x

eta_y=0

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2


-------- 3. Symmetry:

n=-1

xi_x=x

eta_y= - y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2


-------- 4. Symmetry:

      15
n= - ----
      7

xi_x=7*x

eta_y=y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2

-------- 5. Symmetry:

      15
n= - ----
      7

          6/7
xi_x=343*x

            6/7
       147*x   *y + 12*x
eta_y=-------------------
               x

eta_yx=0

eta_yxx=0


-------- 6. Symmetry:

n=-5

      2
xi_x=x

eta_y=x*y

eta_yx=0

eta_yxx=0

-------- 7. Symmetry:

n=-5

xi_x=x

eta_y=3*y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2


-------- 8. Symmetry:

n=0

xi_x=1

eta_y=0

eta_yx=0

eta_yxx=0

-------- 9. Symmetry:

n=0

xi_x=x

eta_y= - 2*y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2


-------- 10. Symmetry:

      20
n= - ----
      7

xi_x=7*x

eta_y=6*y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2

-------- 11. Symmetry:

      20
n= - ----
      7

          8/7
xi_x=343*x

            8/7         2
       196*x   *y - 12*x
eta_y=--------------------
               x

eta_yx=0

eta_yxx=0


-------- 12. Symmetry:

n=-3

xi_x=x

eta_y=y

            1          3
         - ---*y *n - ---*y
            2   x      2   x
eta_yx=----------------------
                   5
              n + ---
                   2

             1   n    2      n  2
          - ---*x *n*y  - 2*x *y
             2
eta_yxx=--------------------------
                      5
                 n + ---
                      2


-------- 13. Symmetry:

      5
n= - ---
      2

xi_x=2*x

eta_y=y

            1                3
         - ---*y *c_201*n - ---*y *c_201
            2   x            2   x
eta_yx=----------------------------------
                         5
                    n + ---
                         2

             1   n          2      n        2
          - ---*x *c_201*n*y  - 2*x *c_201*y
             2
eta_yxx=--------------------------------------
                            5
                       n + ---
                            2


-------- 

nodepnd {y}$


lisp(prolong_order:=0)$



end$

