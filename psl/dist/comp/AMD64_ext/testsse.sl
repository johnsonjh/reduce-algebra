(lap '((!*entry hugo expr 3)
       (movsd (indirect (reg 1))(reg xmm9))
       (movsd (indirect (reg r12)) (reg xmm1))
       (movsd (reg xmm1) (indirect (reg 2)))
       (movsd (reg xmm9) (indirect (reg r12)))
       (movsd (reg xmm12) (reg xmm1))
       (movsd (reg xmm1) (reg xmm12))
       (ucomisd (reg xmm9 ) (reg xmm8)) 
       (ucomisd (reg xmm9) (reg xmm2))
       (ucomisd (reg xmm1) (reg xmm10)) 
       (comisd (reg xmm9 ) (reg xmm8)) 
       (comisd (reg xmm9) (reg xmm2))
       (comisd (reg xmm1) (reg xmm10)) 
       (addsd (indirect (reg 1))(reg xmm9))
       (addsd (indirect (reg r12)) (reg xmm1))
       (addsd (reg xmm12) (reg xmm1))
       (addsd (reg xmm1) (reg xmm12))
       (subsd (indirect (reg 1))(reg xmm9))
       (subsd (indirect (reg 2)) (reg xmm1))
       (subsd (reg xmm12) (reg xmm1))
       (subsd (reg xmm1) (reg xmm12))
       (mulsd (indirect (reg 1))(reg xmm9))
       (mulsd (indirect (reg r12)) (reg xmm1))
       (mulsd (reg xmm12) (reg xmm1))
       (mulsd (reg xmm1) (reg xmm12))
       (divsd (indirect (reg 1))(reg xmm9))
       (divsd (indirect (reg r12)) (reg xmm1))
       (divsd (reg xmm12) (reg xmm1))
       (divsd (reg xmm1) (reg xmm12))
       (sqrtsd (indirect (reg 1))(reg xmm9))
       (sqrtsd (indirect (reg r12)) (reg xmm1))
       (sqrtsd (reg xmm12) (reg xmm1))
       (sqrtsd (reg xmm1) (reg xmm12))
       (cvtsi2sdq (indirect (reg 1))(reg xmm2))
       (cvtsi2sdq (indirect (reg r12))(reg xmm2))
       (cvtsi2sdq (indirect (reg 1))(reg xmm9))
       (cvtsi2sdq (indirect (reg r12))(reg xmm9))
       (cvttsd2si (indirect (reg 1))(reg rbx))
       (cvttsd2si (indirect (reg r12))(reg rbx))
       (cvttsd2si (indirect (reg 1))(reg r9))
       (cvttsd2si (indirect (reg r12))(reg r9))
       (ldmxcsr (indirect (reg 3)) nil)
       (stmxcsr (indirect (reg 3)) nil)
       (!*exit 0)))

(lap '((!*entry *float-clear-all-except expr 0)
       (*move (wxor -1 16#3d) (reg 1))
       (*move ($fluid fpstatusloc*) (reg T1))
       (stmxcsr (indirect (reg T1)))
       (and (reg 1) (indirect (reg T1)))
       (ldmxcsr (indirect (reg T1)))
       (!*exit 0)))

%%
%% The following generates an error: the compiler doesn't know how to generate
%%  an and instruction with a 32bit immediate operand and a general address
%%
%%(lap '((!*entry *float-clear-all-except expr 0)
%%       (stmxcsr ($fluid fpstatusloc*))
%%       (and 16#ffffffc2 ($fluid fpstatusloc*))
%%       (ldmxcsr ($fluid fpstatusloc*))
%%       (!*exit 0)))
