
% u31.lsp           Machine generated Lisp

(c!:install "u31" 9596 5547736 7566596)

(c!:install 'profile_a_package '(profile_a_package !*errcont cpulimit t
jlisp lispsystem!* conslimit "PROFILING: " nil !*backtrace !*int
reduce_regression_tests folder "$reduce/packages/" testdirectory "/"
".tst" alglist!* algebraic !*mode "[Profile] " quit expr posn tracefluid
errorset in_list1 erfg!* profile_compare_fn "buildlogs/flaguse.log"
append !*savedef lambda "profile.dat"
"% +++++ Error: Resource limit exceeded" "% @@@@@ Resources used: "
!*resources!* "(" "  (" " " ")" "  )" input !$eof!$ orderp ((
symbol!-make!-fastget (quote lose) 1) (symbol!-make!-fastget (quote
noncom) 0)) (lose noncom) processed symbol!-make!-fastget
"buildlogs/fastgets.lsp" output "% fastgets.lsp generated by profiling"
progn "% end of fastgets.lsp" "Profiling complete" (remake
profile_a_package) get_configuration_data load!-package concat
list!-to!-string window!-heading getd putd resource!-limit sort open
bytecounts md60 restart!-csl prettyprint) 534064685722937635)

(c!:install 'pasf_dt '(pasf_dt true t false pdef (equal lessp leq) nil
ndef (equal greaterp geq) (neq greaterp geq) (neq lessp leq) psdef lessp
nsdef greaterp geq leq neq pasf_pdp) 192374219022117916)

(c!:install 'sfto_vardeg '(sfto_vardeg sfto_mvartest) 
1985084626828756732)

(c!:install 'minusml '(minusml "<apply><minus/>" indent "</apply>"
printout multiminus) 69519007568908919)

(c!:install 'f2dip11 '(f2dip11 !*notestparameters vdpvars!*
"occurs in a parameter and is member of the groebner variables." list
"groebner: LIST not allowed." rederr) 317454470484668284)

(c!:install 'xriterion_1 '(xriterion_1 nil spoly_pair t !*trxideal
"criterion 1 hit" last xval xdiv make_spoly_pair find_item writepri) 
2066116794018681657)

(c!:install 'eqexpr '(eqexpr equalopr nil) 1199199038089351871)

(c!:install 'sign!-of '(sign!-of nil simp!-sign) 361709475169190336)

(c!:install 'comb '(comb nil) 510834381991112783)

(c!:install 'gitimes!: '(gitimes!: mkgi) 1357837004294340991)

(c!:install 'letscalar '(letscalar hold df nil "operator" avalue rtype
antisymmetric infix kvalue linear noncom op opmtch simpfn symmetric
wtl!* opfn expt frlis!* sqrt t !*sqrtrulep (quotient 1 2) !*precise
errpri2 getrtype reval let2 redmsg mkop let3 to letexprn simp0 errpri1
letdf delasc rmsubs) 2048586945887841260)

(c!:install 'find!-null!-space '(find!-null!-space null!-space!-basis
nil tidy!-up!-null!-vectors clear!-column) 1625684863086195589)

(c!:install 'ofsf_facequal!* '(ofsf_facequal!* !*rlsifac !*rlsiexpla
!*rlsiexpl or equal nil ofsf_facequal) 1890336559020611320)

(c!:install 'pasf_susibinad '(pasf_susibinad false true (delete . t)
equal nil t cl_susiminlevel pasf_dec kernels negf pasf_subfof1
pasf_susibinad1 pasf_susibinord pasf_susibineq) 1655015375820728476)

(c!:install 'cgp_mk '(cgp_mk cgp) 1967345575831606739)

(c!:install 'multiminus '(multiminus expression) 1537382582458151397)

(c!:install 'dm!-min '(dm!-min dm!-gt) 1795872524700527989)

(c!:install '!:dmtimeslst '(!:dmtimeslst !:times) 504835945302623412)

(c!:install 'arglength '(arglength !*intstr t reval) 1153614851099336615
)

(c!:install '!*di2q '(!*di2q varlist!* nil !*di2q0) 87666758406744850)

(c!:install 'innprodp2 '(innprodp2 nil innprodkp) 863072337319648109)

(c!:install 'idtomind '(idtomind i2m_jetspace!* i2m_jetspace_odd!*) 
976850545617753139)

(c!:install 'quotelog '(quotelog logical) 1042655740137098263)

(c!:install 'pasf_sisub '(pasf_sisub ex t all bex ball and true false or
not impl repl equiv nil subf pasf_simplat1 pasf_sisub!-gand) 
1065020824595154471)

(c!:install 'ev_2a '(ev_2a dip_vars!* ev_2a1) 40967775589971858)

(c!:install 'omatpir '(omatpir (!/ o m a t p) nil lex omsir omobj
checktag) 802697970492598096)

(c!:install 'mkempspmat '(mkempspmat sparsemat) 1963144696235856231)

(c!:install 'suchp '(suchp such!-that nil) 2237043806669000480)

(c!:install 'dipequal '(dipequal nil evequal) 96912840032168831)

(c!:install '!*xadd '(!*xadd nil) 1322816741251308618)

(c!:install 'log_assignment '(log_assignment t quote function nil setq
"+++ Assignment to parameter of inline: " "+++ Macro was: " inlineinfo
cond log_assignment_list_list log_assignment_list) 1403197982207614550)

(c!:install 'simp!-prop1 '(simp!-prop1 !'and nil !'or not implies or t
equiv and true false (or !*true (not !*true)) (and !*true (not !*true))
boolean prop!* not_prop!* propvars!* reval simp addf multf) 
1044207012247574868)

(c!:install 'split_cov_cont_ids '(split_cov_cont_ids nil minus) 
210396523032333593)

(c!:install 'st_ad_numsorttree '(st_ad_numsorttree st_ad_numsorttree1) 
992495705411274581)

(c!:install 'general!-horner!-rule!-mod!-p '(
general!-horner!-rule!-mod!-p t general!-expt!-mod!-p
general!-times!-mod!-p general!-plus!-mod!-p) 1402848173375291788)

(c!:install '!*a2f '(!*a2f simp!* !*q2f) 1157670281669662903)

(c!:install 'triplesetprolongedby '(triplesetprolongedby nil) 
2201022128150144379)

(c!:install 'ofsf_lnegrel '(ofsf_lnegrel equal neq leq greaterp lessp
geq "ofsf_lnegrel: unknown operator " rederr) 1357440360697444682)


% End of generated Lisp code

