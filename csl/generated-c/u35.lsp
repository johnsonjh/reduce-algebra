
% u35.lsp           Machine generated Lisp

(c!:install "u35" 86 9154710 90056)

(c!:install 'lieninstruc '(lieninstruc difference nil lie_cc lienstrucin
minus plus aeval!* aminusp!: setk) 1855164136878405455)

(c!:install 'xnp '(xnp nil) 1364558411567724926)

(c!:install 'simp0 '(simp0 !*factor !*sq nil subfg!* !*sub2 alglist!* t
simp0fn prepsq!* frvarsof setkorder simp delete_from_alglist simpiden) 
2220637349986936266)

(c!:install 'mri_prifloor '(mri_prifloor !*nat failed "[" "]" prin2!*
maprin) 837916294137646440)

(c!:install 'numir '(numir atts name complex_cartesian plus nil times
!&imaginaryi!; complex_polar exp rational divide find lex omobj) 
204094701760676937)

(c!:install 'mulpower '(mulpower sqrtlist zlist addexptsdf reduceroots
multdf) 583927729980129668)

(c!:install 'mkexpt '(mkexpt expt) 1143249836449748887)

(c!:install 'rnfix!* '(rnfix!*) 950600838787376087)

(c!:install 'remdiff '(remdiff difference plus minus nil constp) 
169951293713962959)

(c!:install 'r2oaddspecies '(r2oaddspecies "new species: " prin2t) 
2133108755580671465)

(c!:install 'incident1 '(incident1 nil) 83410112953107840)

(c!:install 'mkrepart '(mkrepart repart realvaluedp to sfp repartsq mksq
) 215017412020493761)

(c!:install 'applsmacro '(applsmacro inlineinfo rlisp
"Argument mismatch for SMACRO" !*loginlines nil g lambda rerror
log_inlines no!-side!-effect!-listp one!-entry!-listp subla!-q
no!-side!-effectp one!-entryp aconc pair) 1756673463278731626)

(c!:install 'mv!-compact2 '(mv!-compact2 nil equiv!-coeffs
mv!-domainlist reduce mv!-domainlist!-!- mv!-coeff!-replace mv!-!+) 
2225783091513746606)

(c!:install 'extract_vars '(extract_vars variable raiseind!: nreverse) 
581001641406960949)

(c!:install 'gadd '(gadd a ndims!* hephys
"Gamma5 not allowed unless vecdim is 4" rerror) 1134486917935138758)

(c!:install 'gigcdsq '(gigcdsq nil giintgcd quotf) 395636328432651245)

(c!:install 'cl_gand!-col '(cl_gand!-col true and nil !*rlsichk cl_cflip
cl_flip cl_simpl1) 1549027014760571756)

(c!:install 'cl_sacatlp '(cl_sacatlp t) 546834097179446475)

(c!:install 'ev_mtest!? '(ev_mtest!? t nil) 509571519766947268)

(c!:install 'sfto_dprpartf '(sfto_dprpartf sfto_dcontentf sfto_dprpartf1
) 780173639396286985)

(c!:install 'cols2rows2 '(cols2rows2 ithlistelem) 232241007045816988)

(c!:install 'f4 '(f4 pi "<pi/>" euler_gamma "<eulergamma/>" true
"<true/>" false "<false/>" !Na!N "<notanumber/>" infinity !*web
"<cn type=""constant"">" "<cn type=&quot;constant&quot;>" "&infin;"
"</cn>" e "&ExponentialE;" i "&ImaginaryI;" "<cn" " type=""real"">"
" type=&quot;real&quot;>" " type=""integer"">"
" type=&quot;integer&quot;>" ">" "<ci" " type=""list"">"
" type=&quot;list&quot;>" " type=""vector"">"
" type=&quot;vector&quot;>" "</ci>" nil printout listp) 
1856869730658203263)

(c!:install 'ldf!-dep!-var '(ldf!-dep!-var nil depl!* ldt!-tvar makeset)
 799932098294362677)

(c!:install 'e!* '(e!* !:bprec!: !:e) 1309429908073641312)

(c!:install 'markedvarp '(markedvarp !*marked!*) 2259735358532423556)

(c!:install 'evalwhereexp '(evalwhereexp aeval where nil carx evalletsub
) 1637168594519833416)

(c!:install 'profile_a_package '(profile_a_package !*errcont cpulimit t
jlisp lispsystem!* conslimit "PROFILING: " nil !*backtrace !*int
reduce_regression_tests folder "$reduce/packages/" testdirectory "/"
".tst" alglist!* algebraic !*mode "[Profile] " quit expr posn tracefluid
errorset in_list1 erfg!* profile_compare_fn "buildlogs/flaguse.log"
append !*savedef lambda "profile.dat"
"% +++++ Error: Resource limit exceeded" "% @@@@@ Resources used: "
!*resources!* "(" "  (" " " ")" "  )" input !$eof!$ orderp ((
symbol!-make!-fastget (quote lose) 1) (symbol!-make!-fastget (quote
noncom) 0)) (lose noncom) processed symbol!-make!-fastget
"buildlogs/fastgets.lsp" output "% fastgets.lsp generated by profiling"
progn "% end of fastgets.lsp" "Profiling complete" (remake
profile_a_package) get_configuration_data load!-package concat
list!-to!-string window!-heading getd putd resource!-limit sort open
bytecounts md60 restart!-csl prettyprint) 534064685722937635)

(c!:install 'general!-multiply!-by!-constant!-mod!-p '(
general!-multiply!-by!-constant!-mod!-p nil t general!-modular!-times
!*n2f) 1546862412616428331)

(c!:install 'evaluate!-in!-order!-mod!-p '(evaluate!-in!-order!-mod!-p t
!*d2n horner!-rule!-in!-order!-mod!-p) 1971267847906715886)

(c!:install 'qqe_simplbtat '(qqe_simplbtat neq false true nil equal
rl_prepat qqe_op qqe_arg2l qqe_eta!-in!-term qqe_arg2r rl_simpat) 
1597516727760877248)

(c!:install 'pasf_smordtable2 '(pasf_smordtable2 ((lessp (lessp 2) (leq
2) (equal 2) (neq nil) (geq nil) (greaterp nil) (cong nil) (ncong nil))
(leq (lessp 2) (leq 2) (equal 2) (neq nil) (geq nil) (greaterp nil) (
cong nil) (ncong nil)) (equal (lessp false) (leq false) (equal false) (
neq 1) (geq 1) (greaterp 1) (cong nil) (ncong nil)) (neq (lessp 2) (leq
2) (equal 2) (neq nil) (geq nil) (greaterp nil) (cong nil) (ncong nil))
(geq (lessp false) (leq false) (equal false) (neq 1) (geq 1) (greaterp 1
) (cong nil) (ncong nil)) (greaterp (lessp false) (leq false) (equal
false) (neq 1) (geq 1) (greaterp 1) (cong nil) (ncong nil)))) 
239562974591753651)

(c!:install 'quotexf!* '(quotexf!* quotfexf!*1 nreverse) 
784945289340364209)

(c!:install 'conditionrd '(conditionrd char (r e l n) lex mathml relnrd)
 1418394214286706482)

(c!:install 'diford '(diford lengthn) 137269086515083911)

(c!:install 'o!-nextarg '(o!-nextarg !*udebug nil i upb (null!-fn)
acontract op mcontract null!-fn expand identity uprint first0 last0 mval
) 1748377045231513006)

(c!:install 'partitwedge '(partitwedge xpndwedge mkuniquewedge partitop)
 1325440439796355499)

(c!:install 'evalmember '(evalmember getrlist) 674673312422097180)

(c!:install 'gpargp '(gpargp gpexpp gplogexpp) 1352311401528030530)

(c!:install 'ev!-edgeloop '(ev!-edgeloop ndim!* binc) 
1448108987303425784)

(c!:install 'mk_dummy_ids '(mk_dummy_ids dummy reserved dummy_id!*
intersection clean_numid union) 847533562057394808)

(c!:install 'balance_mod '(balance_mod) 171390836952043906)


% End of generated Lisp code

